{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\knightnight101\\\\Desktop\\\\Personal_Projects\\\\Simply\\\\src\\\\components\\\\Results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.less';\nimport './css/Results.css';\nimport { useTransition, animated, config } from 'react-spring';\nimport { ResultCard } from './ResultCard';\nexport const Results = _props => {\n  _s();\n\n  const {\n    results\n  } = _props;\n  const transition = useTransition(results, result => result.id, {\n    from: {\n      transform: \"translate3d(-150%, 0,0)\",\n      opacity: 0\n    },\n    enter: {\n      transform: \"translate3d(0%, 0,0)\",\n      opacity: 1\n    },\n    leave: {\n      transform: \"translate3d(-150%,0, 0)\",\n      opacity: 0\n    },\n    config: (item, state) => state === 'leave' ? {\n      duration: 500\n    } : config.gentle\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: transition.map(({\n      item,\n      props,\n      key\n    }) => item && /*#__PURE__*/_jsxDEV(animated.div, {\n      style: props,\n      children: /*#__PURE__*/_jsxDEV(ResultCard, {\n        result: item,\n        onSelectChange: _props.onSelectChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }, this))\n  }, void 0, false);\n};\n\n_s(Results, \"XDP2FMOoI4V9T6IPAMHOJnf8FXw=\", false, function () {\n  return [useTransition];\n});\n\n_c = Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["C:/Users/knightnight101/Desktop/Personal_Projects/Simply/src/components/Results.js"],"names":["React","useState","useTransition","animated","config","ResultCard","Results","_props","results","transition","result","id","from","transform","opacity","enter","leave","item","state","duration","gentle","map","props","key","onSelectChange"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,qBAAP;AACA,OAAO,mBAAP;AACA,SAAQC,aAAR,EAAuBC,QAAvB,EAAiCC,MAAjC,QAA8C,cAA9C;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,MAAMC,OAAO,GAAIC,MAAD,IAAY;AAAA;;AAC/B,QAAM;AAACC,IAAAA;AAAD,MAAYD,MAAlB;AACA,QAAME,UAAU,GAAGP,aAAa,CAAEM,OAAF,EAAWE,MAAM,IAAIA,MAAM,CAACC,EAA5B,EAAgC;AAC5DC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,SAAS,EAAE,yBAAb;AAAwCC,MAAAA,OAAO,EAAE;AAAjD,KADsD;AAE5DC,IAAAA,KAAK,EAAE;AAAEF,MAAAA,SAAS,EAAE,sBAAb;AAAqCC,MAAAA,OAAO,EAAE;AAA9C,KAFqD;AAG5DE,IAAAA,KAAK,EAAE;AAAEH,MAAAA,SAAS,EAAE,yBAAb;AAAwCC,MAAAA,OAAO,EAAE;AAAjD,KAHqD;AAI5DV,IAAAA,MAAM,EAAE,CAACa,IAAD,EAAOC,KAAP,KACRA,KAAK,KAAK,OAAV,GAAoB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAApB,GAAwCf,MAAM,CAACgB;AALa,GAAhC,CAAhC;AAQA,sBACI;AAAA,cAEQX,UAAU,CAACY,GAAX,CAAe,CAAC;AAACJ,MAAAA,IAAD;AAAOK,MAAAA,KAAP;AAAcC,MAAAA;AAAd,KAAD,KAAwBN,IAAI,iBACvC,QAAC,QAAD,CAAU,GAAV;AAAwB,MAAA,KAAK,EAAEK,KAA/B;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEL,IAApB;AAA0B,QAAA,cAAc,EAAEV,MAAM,CAACiB;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ,OAAmBD,GAAnB;AAAA;AAAA;AAAA;AAAA,YADJ;AAFR,mBADJ;AAWH,CArBM;;GAAMjB,O;UAEUJ,a;;;KAFVI,O","sourcesContent":["import React, {useState} from 'react'\r\nimport 'antd/dist/antd.less';\r\nimport './css/Results.css'\r\nimport {useTransition, animated, config} from 'react-spring'\r\nimport { ResultCard } from './ResultCard';\r\n\r\nexport const Results = (_props) => {\r\n    const {results} = _props\r\n    const transition = useTransition( results, result => result.id, {\r\n        from: { transform: \"translate3d(-150%, 0,0)\", opacity: 0 },\r\n        enter: { transform: \"translate3d(0%, 0,0)\", opacity: 1 },\r\n        leave: { transform: \"translate3d(-150%,0, 0)\", opacity: 0 },\r\n        config: (item, state) =>\r\n        state === 'leave' ? { duration: 500 } : config.gentle,\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                transition.map(({item, props, key}) => item &&\r\n                    <animated.div key={key} style={props}>\r\n                        <ResultCard result={item} onSelectChange={_props.onSelectChange}/>\r\n                    </animated.div>\r\n    )\r\n            }\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}