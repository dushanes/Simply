{"ast":null,"code":"import \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\knightnight101\\\\Desktop\\\\Personal_Projects\\\\Simply\\\\src\\\\components\\\\Results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport 'antd/dist/antd.less';\nimport './css/Results.css';\nimport { useTransition, animated, config } from 'react-spring';\nimport { ResultCard } from './ResultCard';\nimport useMeasure from \"use-measure\";\nexport const Results = _props => {\n  _s();\n\n  const {\n    results\n  } = _props;\n  const transition = useTransition(results, result => result.id, {\n    from: {\n      transform: \"translate3d(-100%, 0,0)\",\n      opacity: 0\n    },\n    enter: {\n      transform: \"translate3d(0%, 0,0)\",\n      opacity: 1\n    },\n    leave: {\n      transform: \"translate3d(-100%, 0,0)\",\n      opacity: 0\n    },\n    delay: 500,\n    config: (item, state) => state === 'leave' ? {\n      duration: 1000\n    } : config.gentle\n  });\n  const list = transition.map(({\n    item,\n    props,\n    key\n  }) => item && /*#__PURE__*/_jsxDEV(animated.div, {\n    style: {\n      position: \"absolute\",\n      'min-height': \"100%\",\n      ...props\n    },\n    children: /*#__PURE__*/_jsxDEV(ResultCard, {\n      result: item,\n      onSelectChange: _props.onSelectChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this));\n  const cardHeight = useMeasure();\n  return /*#__PURE__*/_jsxDEV(_List, {\n    grid: {\n      gutter: 16,\n      xs: 1,\n      sm: 2,\n      md: 4,\n      lg: 4,\n      xl: 6,\n      xxl: 3\n    },\n    style: {\n      height: \"100%\",\n      position: \"relative\"\n    },\n    dataSource: list,\n    renderItem: item => /*#__PURE__*/_jsxDEV(_List.Item, {\n      style: {\n        position: \"relative\"\n      },\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Results, \"MYsLe3rvcfl+oAGiTbIz1ekPVbs=\", false, function () {\n  return [useTransition, useMeasure];\n});\n\n_c = Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["C:/Users/knightnight101/Desktop/Personal_Projects/Simply/src/components/Results.js"],"names":["React","useState","useRef","useTransition","animated","config","ResultCard","useMeasure","Results","_props","results","transition","result","id","from","transform","opacity","enter","leave","delay","item","state","duration","gentle","list","map","props","key","position","onSelectChange","cardHeight","gutter","xs","sm","md","lg","xl","xxl","height"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,OAAO,qBAAP;AACA,OAAO,mBAAP;AAEA,SAAQC,aAAR,EAAuBC,QAAvB,EAAiCC,MAAjC,QAA8C,cAA9C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,OAAO,MAAMC,OAAO,GAAIC,MAAD,IAAY;AAAA;;AAC/B,QAAM;AAACC,IAAAA;AAAD,MAAYD,MAAlB;AACA,QAAME,UAAU,GAAGR,aAAa,CAAEO,OAAF,EAAWE,MAAM,IAAIA,MAAM,CAACC,EAA5B,EAAgC;AAC5DC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,SAAS,EAAE,yBAAb;AAAwCC,MAAAA,OAAO,EAAE;AAAjD,KADsD;AAE5DC,IAAAA,KAAK,EAAE;AAAEF,MAAAA,SAAS,EAAE,sBAAb;AAAqCC,MAAAA,OAAO,EAAE;AAA9C,KAFqD;AAG5DE,IAAAA,KAAK,EAAE;AAAEH,MAAAA,SAAS,EAAE,yBAAb;AAAwCC,MAAAA,OAAO,EAAE;AAAjD,KAHqD;AAI5DG,IAAAA,KAAK,EAAE,GAJqD;AAK5Dd,IAAAA,MAAM,EAAE,CAACe,IAAD,EAAOC,KAAP,KACRA,KAAK,KAAK,OAAV,GAAoB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAApB,GAAyCjB,MAAM,CAACkB;AANY,GAAhC,CAAhC;AASA,QAAMC,IAAI,GAAGb,UAAU,CAACc,GAAX,CAAe,CAAC;AAACL,IAAAA,IAAD;AAAOM,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GAAD,KAAwBP,IAAI,iBACxD,QAAC,QAAD,CAAU,GAAV;AAAwB,IAAA,KAAK,EAAE;AAACQ,MAAAA,QAAQ,EAAE,UAAX;AAAuB,oBAAc,MAArC;AAA6C,SAAGF;AAAhD,KAA/B;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEN,IAApB;AAA0B,MAAA,cAAc,EAAEX,MAAM,CAACoB;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ,KAAmBF,GAAnB;AAAA;AAAA;AAAA;AAAA,UADa,CAAb;AAMA,QAAMG,UAAU,GAAGvB,UAAU,EAA7B;AAEA,sBACQ;AACI,IAAA,IAAI,EAAE;AACNwB,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,EAAE,EAAE,CAFE;AAGNC,MAAAA,EAAE,EAAE,CAHE;AAINC,MAAAA,EAAE,EAAE,CAJE;AAKNC,MAAAA,EAAE,EAAE,CALE;AAMNC,MAAAA,EAAE,EAAE,CANE;AAONC,MAAAA,GAAG,EAAE;AAPC,KADV;AAUI,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC,MAAR;AAAgBV,MAAAA,QAAQ,EAAE;AAA1B,KAVX;AAWI,IAAA,UAAU,EAAEJ,IAXhB;AAYI,IAAA,UAAU,EAAEJ,IAAI,iBAChB,cAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAACQ,QAAAA,QAAQ,EAAE;AAAX,OAAlB;AAAA,gBACKR;AADL;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA,UADR;AAoBH,CAvCM;;GAAMZ,O;UAEUL,a,EAeAI,U;;;KAjBVC,O","sourcesContent":["import React, {useState, useRef} from 'react'\r\nimport 'antd/dist/antd.less';\r\nimport './css/Results.css'\r\nimport { List, Card } from 'antd';\r\nimport {useTransition, animated, config} from 'react-spring'\r\nimport { ResultCard } from './ResultCard';\r\nimport useMeasure from \"use-measure\";\r\n\r\nexport const Results = (_props) => {\r\n    const {results} = _props\r\n    const transition = useTransition( results, result => result.id, {\r\n        from: { transform: \"translate3d(-100%, 0,0)\", opacity: 0},\r\n        enter: { transform: \"translate3d(0%, 0,0)\", opacity: 1},\r\n        leave: { transform: \"translate3d(-100%, 0,0)\", opacity: 0},\r\n        delay: 500,\r\n        config: (item, state) =>\r\n        state === 'leave' ? { duration: 1000 } : config.gentle,\r\n    })\r\n    \r\n    const list = transition.map(({item, props, key}) => item &&\r\n    <animated.div key={key} style={{position: \"absolute\", 'min-height': \"100%\", ...props}}>\r\n        <ResultCard result={item} onSelectChange={_props.onSelectChange}/>\r\n    </animated.div>\r\n    )\r\n\r\n    const cardHeight = useMeasure()\r\n\r\n    return (\r\n            <List\r\n                grid={{\r\n                gutter: 16,\r\n                xs: 1,\r\n                sm: 2,\r\n                md: 4,\r\n                lg: 4,\r\n                xl: 6,\r\n                xxl: 3,\r\n                }}\r\n                style={{height:\"100%\", position: \"relative\"}}\r\n                dataSource={list}\r\n                renderItem={item => (\r\n                <List.Item style={{position: \"relative\"}}>\r\n                    {item}\r\n                </List.Item>\r\n                )}\r\n            />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}