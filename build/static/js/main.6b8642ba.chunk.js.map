{"version":3,"sources":["components/AppHeader.js","components/ResultCard.js","components/img/breakfast.jpg","components/HomeMostPopular.js","components/HomeExplore.js","components/Directions.js","components/Ingredients.js","components/Recipe.js","components/AppContent.js","components/CircleImage.js","components/img/appetizer.jpg","components/img/lunch.jpg","components/img/chicken.jpg","components/img/steak.jpg","components/img/salad.jpg","components/img/soup.jpg","components/BarList.js","components/Results.js","SimplyApp.js","serviceWorker.js","index.js"],"names":["Header","Search","AppHeader","returnHome","onSearch","toggleUnits","setResults","className","onClick","style","cursor","color","marginBottom","placeholder","enterButton","query","_onSearch","Group","paddingTop","optionType","defaultValue","buttonStyle","onChange","e","target","value","Button","ResultCard","result","onSelectChange","hoverable","title","size","cover","src","image","alt","id","display","width","FieldTimeOutlined","float","fontSize","marginRight","readyInMinutes","HomeMostPopular","data","getData","useEffect","console","log","grid","gutter","xs","sm","md","lg","xl","xxl","position","pagination","defaultPageSize","hideOnSinglePage","dataSource","renderItem","item","Item","height","zIndex","marginTop","type","HomeExplore","Directions","props","state","this","instructions","stepItems","map","step","number","tabIndex","React","Component","Ingredients","items","ingredItems","textTransform","name","useMetric","measures","metric","amount","unitLong","us","Recipe","recipe","ingred","createMarkup","Remarkable","set","html","breaks","__html","render","summary","dangerouslySetInnerHTML","justify","span","offset","AppContent","ID","popularData","getPopularData","exploreData","getExploreData","flexDirection","CircleImage","url","action","textAlign","marginLeft","borderRadius","border","borderColor","boxShadow","padding","BarList","getType","appetizer","breakfast","lunch","chicken","steak","salad","soup","Results","results","totalResults","onPageChange","page","pageSize","showTotal","total","defaultCurrent","Content","Footer","SimplyApp","useState","searchQuery","setSearchQuery","resultsState","setResultsState","metricState","setMetricState","isSearching","setSearching","img","setRecipe","recipeID","setRecipeID","setTotalState","setInstructions","ingredients","setIngred","setPopularData","setExploreData","handleChangeSelected","getRecipe","searchRecipies","input","fetch","encodeSearch","then","res","ok","json","Error","prev","catch","error","_query","_type","_offset","_num","_sort","request","encodeID","analyzedInstructions","extendedIngredients","steps","bool","length","Boolean","window","location","hostname","match","require","config","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6b8642ba.chunk.js","sourcesContent":["import React from 'react'\r\nimport './css/AppHeader.css'\r\nimport {Layout, Radio, Input} from 'antd'\r\nconst Header = Layout.Header\r\nconst Search = Input.Search\r\n\r\n\r\nexport const AppHeader = ({returnHome, onSearch, toggleUnits, setResults}) => {\r\n    return(\r\n        <Header className='app-header'>\r\n                <div className='app-title' onClick={() => returnHome()} style={{cursor:'pointer'}}>\r\n                    <h1 style={{color: 'white', marginBottom: '0px'}}>\r\n                    Simply\r\n                    </h1>\r\n                </div>\r\n                <Search \r\n                className='search-bar'\r\n                placeholder=\"Search here\" \r\n                enterButton={true}\r\n                onSearch={(query) => _onSearch(query)} \r\n                />\r\n                <Radio.Group style={{paddingTop: '8px'}} optionType='button' defaultValue={false} buttonStyle=\"solid\" onChange={(e) => toggleUnits(e.target.value)}>\r\n                    <Radio.Button value={false}>US</Radio.Button>\r\n                    <Radio.Button value={true}>Metric</Radio.Button>\r\n                </Radio.Group>\r\n        </Header>\r\n    )\r\n    function _onSearch(query) {\r\n        setResults([])\r\n        onSearch(query)\r\n    }\r\n}","import React from 'react'\r\nimport {Card} from 'antd'\r\nimport {\r\n    FieldTimeOutlined\r\n  } from '@ant-design/icons';\r\nexport const ResultCard = ({result, onSelectChange}) => {\r\n    return(\r\n        <Card className=\"card\" \r\n        hoverable={true}\r\n        title={result.title}\r\n        key={result.id}\r\n        size='small'\r\n        cover={<img src={result.image} alt={\"\"}/>} \r\n        onClick={() => onSelectChange(result.id)}\r\n        >\r\n            <div className=\"card-body\">\r\n                <h5 className=\"stat-text\" style={{}}>Calories: 500</h5>\r\n                <div style={{display:'inline', width: '100%'}}>\r\n                    <FieldTimeOutlined style={{float: 'right', fontSize:'1.2em'}}/>\r\n                    <h5 className=\"stat-text\" style={{float: 'right', marginRight: '8px'}}>{result.readyInMinutes} Minutes</h5>   \r\n                </div>\r\n            </div>\r\n        </Card> \r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/breakfast.ad7d4ec6.jpg\";","import React, { useEffect } from 'react'\r\nimport { List, Divider, Button } from 'antd'\r\nimport { ResultCard } from './ResultCard'\r\nimport './css/HomeMostPopular.css'\r\nimport breakfast from './img/breakfast.jpg'\r\n\r\nexport const HomeMostPopular = ({data, getData, onSelectChange}) => {\r\n    let test = [\r\n        {id:\"0001\", title:\"Apple Caramel encrusted banana split ice cream potato\", image: breakfast},\r\n        {id:\"0001\", title:\"Apple Caramel encrusted banana split ice cream potato\", image: breakfast},\r\n        {id:\"0001\", title:\"Apple Caramel encrusted banana split ice cream potato\", image: breakfast},\r\n        {id:\"0001\", title:\"Apple Caramel encrusted banana split ice cream potato\", image: breakfast},\r\n        {id:\"0001\", title:\"Apple Caramel encrusted banana split ice cream potato\", image: breakfast},\r\n        {id:\"0001\", title:\"Apple Caramel encrusted banana split ice cream potato\", image: breakfast},\r\n    ]\r\n    useEffect(() => {\r\n        getData()\r\n        console.log('mounted');  \r\n      }, []);\r\n    return (\r\n        <div className='home-most-popular' >\r\n            <h1 className='title-header' style={{fontSize: 28}}>Most Popular</h1>\r\n            <Divider/>\r\n            <List\r\n                grid={{\r\n                gutter: [16, 16],\r\n                xs: 1,\r\n                sm: 1,\r\n                md: 1,\r\n                lg: 1,\r\n                xl: 2,\r\n                xxl: 2,\r\n                }}\r\n                style={{position: \"relative\"}}\r\n                pagination={{defaultPageSize: 4, hideOnSinglePage: true}}\r\n                dataSource={data}\r\n                renderItem={item => (\r\n                    \r\n                <List.Item style={{height: '220px !important', position: \"relative\", zIndex: 1}}>\r\n                    <ResultCard result={item} onSelectChange={onSelectChange}/>\r\n                </List.Item>\r\n                )}\r\n            />\r\n            <Button style={{float: 'right', marginRight: \"15px\", marginTop: '16px'}} type=\"primary\">See More</Button>\r\n        </div>\r\n\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { List, Divider, Button } from 'antd'\r\nimport { ResultCard } from './ResultCard'\r\nimport './css/HomeExplore.css'\r\nimport breakfast from './img/breakfast.jpg'\r\n\r\nexport const HomeExplore = ({data, getData, onSelectChange}) => {\r\n    let test = [\r\n        {id:\"0001\", title:\"Apple Caramel encrusted banana split ice cream potato\", image: breakfast},\r\n        {id:\"0001\", title:\"Apple Caramel encrusted banana split ice cream potato\", image: breakfast},\r\n        {id:\"0001\", title:\"Apple Caramel encrusted banana split ice cream potato\", image: breakfast},\r\n        {id:\"0001\", title:\"Apple Caramel encrusted banana split ice cream potato\", image: breakfast},\r\n        {id:\"0001\", title:\"Apple Caramel encrusted banana split ice cream potato\", image: breakfast},\r\n        {id:\"0001\", title:\"Apple Caramel encrusted banana split ice cream potato\", image: breakfast},\r\n        {id:\"0001\", title:\"Apple Caramel encrusted banana split ice cream potato\", image: breakfast},\r\n        {id:\"0001\", title:\"Apple Caramel encrusted banana split ice cream potato\", image: breakfast},\r\n        {id:\"0001\", title:\"Apple Caramel encrusted banana split ice cream potato\", image: breakfast},\r\n    ]\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        console.log('mounted');  \r\n      }, []);\r\n\r\n    return (\r\n        <div className='home-explore' >\r\n            <h1 className='title-header' style={{fontSize: 28}}>Explore</h1>\r\n            <Divider/>\r\n            <List\r\n                grid={{\r\n                gutter: [16, 16],\r\n                xs: 1,\r\n                sm: 2,\r\n                md: 2,\r\n                lg: 2,\r\n                xl: 3,\r\n                xxl: 3,\r\n                }}\r\n                style={{position: \"relative\"}}\r\n                pagination={{defaultPageSize: 6, hideOnSinglePage: true}}\r\n                dataSource={data}\r\n                renderItem={item => (\r\n                    \r\n                <List.Item style={{height: '220px !important', position: \"relative\", zIndex: 1}}>\r\n                    <ResultCard result={item} onSelectChange={onSelectChange}/>\r\n                </List.Item>\r\n                )}\r\n            />\r\n            <Button style={{float: 'right', marginRight: \"15px\", marginTop: '16px'}} type=\"primary\">See More</Button>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './css/Directions.css'\r\n\r\nexport default class Directions extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state= {}\r\n    }\r\n\r\n    render(){\r\n        if(this.props.instructions) {\r\n            var stepItems = this.props.instructions.map((step) => (\r\n                <div key={step.number} className='list-item-container' id={step.number}  tabIndex=\"0\">\r\n                    <h3>Step {step.number}:</h3>\r\n                    <p>{step.step}</p>\r\n                </div>\r\n            ))\r\n        }\r\n\r\n        return (\r\n                <div>\r\n                    {\r\n                        stepItems\r\n                    }\r\n                </div>\r\n        )        \r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class Ingredients extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state= {}\r\n    }\r\n    render(){\r\n        if(this.props.items) {\r\n            var ingredItems = this.props.items.map((item) => (\r\n                <div className='list-item-container'>\r\n                    <h3 style={{textTransform: 'capitalize'}}>{item.name}:</h3>\r\n                    {this.props.useMetric ? (<p>{item.measures.metric.amount} {item.measures.metric.unitLong}</p>): (<p>{item.measures.us.amount} {item.measures.us.unitLong}</p>) }\r\n                </div>\r\n            ))\r\n        }\r\n\r\n        return (\r\n                <div>\r\n                    {\r\n                        ingredItems\r\n                    }\r\n                </div>\r\n        )        \r\n    }\r\n}","import React from 'react'\r\nimport './css/Recipe.css'\r\nimport {Row, Col} from 'antd'\r\nimport Directions from './Directions'\r\nimport Ingredients from './Ingredients'\r\nimport {Remarkable} from 'remarkable';\r\n\r\nexport const Recipe = ({recipe, useMetric, ingred, instructions}) => {\r\n    \r\n    function createMarkup() {\r\n        const md = new Remarkable();\r\n        md.set({\r\n            html: true,\r\n            breaks: true\r\n        });\r\n    \r\n        return {__html: md.render(recipe.summary)};\r\n    }\r\n      \r\n    function Content() {\r\n        return <div className='desc-source'dangerouslySetInnerHTML={createMarkup()} />;\r\n    }\r\n    \r\n    return(\r\n        <div className='grid-root'>\r\n            <Row>\r\n                <Col>\r\n                    <div id='title-container'>\r\n                        <h1 id='title-food' className='title-header'>{recipe.title}</h1>\r\n                    </div>\r\n                    <div className='food-img-container'>\r\n                        <img className='food-img' alt='food-name' src={recipe.image}/>\r\n                    </div>\r\n                    {Content()}\r\n                </Col>\r\n            </Row>\r\n            <Row justify='center' gutter='2'>\r\n                <Col span={8}>\r\n                    <h2 className='title-header'>Ingredients</h2>\r\n                    <Ingredients items={ingred} useMetric={useMetric}/>\r\n                </Col>\r\n                <Col span={8} offset={2}>\r\n                    <h2 className='title-header'>Directions</h2>\r\n                    <Directions instructions={instructions}/>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { HomeMostPopular } from './HomeMostPopular'\r\nimport { HomeExplore } from './HomeExplore'\r\nimport { Recipe } from './Recipe'\r\nimport './css/AppContent.css'\r\n\r\nexport const AppContent = ({ID, recipe, useMetric, ingred, instructions, popularData, getPopularData, exploreData, getExploreData, onSelectChange}) => {\r\n    /*const transitions = useTransition(ID < 0, null, {\r\n        from: { position: 'absolute', opacity: 0 },\r\n        enter: { opacity: 1 },\r\n        leave: { opacity: 0 },\r\n        })\r\n    */\r\n\r\n    return (ID < 0) ?\r\n        <div className='content-container' style={{flexDirection: 'row'}}>\r\n            <HomeMostPopular data={popularData} getData={getPopularData} onSelectChange={onSelectChange}/>\r\n            <HomeExplore data={exploreData} getData={getExploreData} onSelectChange={onSelectChange}/>\r\n        </div>\r\n        :\r\n        <div className='content-container' >\r\n            <Recipe recipe={recipe} useMetric={useMetric} ingred={ingred} instructions={instructions}/>\r\n        </div>\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const CircleImage = ({url, title, action}) =>{\r\n    return(\r\n        <div style={{display: \"block\", textAlign: \"center\", marginLeft: '12px'}}>\r\n            <img height={80} width={80} style={{borderRadius: \"100%\", border: \"solid\", borderColor: '#BB9457', boxShadow: \"0px 0px 12px 0px #969696\", zIndex:2}}  src={url} alt={title}/>\r\n            <h5 style={{padding:'8px', width: \"120px\"}}> {title} </h5>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/appetizer.ec092b60.jpg\";","export default __webpack_public_path__ + \"static/media/lunch.0880376d.jpg\";","export default __webpack_public_path__ + \"static/media/chicken.70e0fdc1.jpg\";","export default __webpack_public_path__ + \"static/media/steak.47dc7210.jpg\";","export default __webpack_public_path__ + \"static/media/salad.bcb788c6.jpg\";","export default __webpack_public_path__ + \"static/media/soup.3e1d0816.jpg\";","import React from 'react'\r\nimport './css/BarList.css'\r\nimport { CircleImage } from './CircleImage'\r\nimport appetizer from \"./img/appetizer.jpg\"\r\nimport breakfast from \"./img/breakfast.jpg\"\r\nimport lunch from \"./img/lunch.jpg\"\r\nimport chicken from \"./img/chicken.jpg\"\r\nimport steak from \"./img/steak.jpg\"\r\nimport salad from \"./img/salad.jpg\"\r\nimport soup from \"./img/soup.jpg\"\r\n\r\nexport const BarList = ({getType, onSearch}) => {\r\n    const data = [\r\n        {title: \"Appetizer Recipies\", url: appetizer, type:\"appetizer\"},\r\n        {title: \"Breakfast and Brunch Recipies\", url: breakfast, type:\"breakfast\"},\r\n        {title: \"Snack Recipies\", url: lunch, type:\"snack\"},\r\n        {title: \"Chicken Recipies\", url: chicken, query:\"chicken\"},\r\n        {title: \"Steak Recipies\", url: steak, query:\"steak\"},\r\n        {title: \"Salad Recipies\", url: salad, type:\"salad\"},\r\n        {title: \"Soup Recipies\", url: soup, type:\"soup\"}\r\n    ]\r\n    return (\r\n        <div className=\"bar-list-container\">\r\n            {data.map(({title, url, type, query}) => {\r\n                const action = type ? getType : onSearch\r\n                if(type){\r\n                    return (\r\n                    <div style={{cursor: \"pointer\" }} onClick={() => action(\"\", type)}>\r\n                        <CircleImage title={title} url={url}/>\r\n                    </div>\r\n                    )\r\n                }else{\r\n                    return (\r\n                    <div style={{cursor: \"pointer\" }} onClick={() => action(query)}>\r\n                        <CircleImage title={title} url={url}/>\r\n                    </div>\r\n                    )\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './css/Results.css'\r\nimport { List } from 'antd';\r\nimport { ResultCard } from './ResultCard';\r\n\r\nexport const Results = ({results, totalResults, onSelectChange, onPageChange}) => {\r\n    return (\r\n        <div className='content-container' >\r\n            <h1 className='title-header' style={{fontSize: 32}}>Search Results</h1>\r\n            <h5>Found {totalResults} total results...</h5>\r\n            <List\r\n                grid={{\r\n                gutter: [16, 16],\r\n                xs: 1,\r\n                sm: 2,\r\n                md: 4,\r\n                lg: 4,\r\n                xl: 6,\r\n                xxl: 6,\r\n                }}\r\n                style={{position: \"relative\"}}\r\n                dataSource={results}\r\n                pagination={{\r\n                    onChange: (page, pageSize) => onPageChange(page, pageSize), \r\n                    showTotal: total => `Total of ${total} items`,\r\n                    defaultPageSize: 20, \r\n                    defaultCurrent: 1,  \r\n                    total: totalResults, \r\n                    hideOnSinglePage: true}}\r\n                renderItem={item => (\r\n                    \r\n                <List.Item style={{height: '220px !important', position: \"relative\", zIndex: 1}}>\r\n                    <ResultCard result={item} onSelectChange={onSelectChange}/>\r\n                </List.Item>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport './components/css/SimplyApp.less';\r\nimport { Layout } from 'antd'\r\nimport { AppHeader } from './components/AppHeader'\r\nimport { AppContent } from './components/AppContent'\r\nimport { BarList } from './components/BarList'\r\nimport 'antd/dist/antd.less'\r\nimport { Results } from './components/Results';\r\nconst {Content, Footer} = Layout\r\n\r\nfunction SimplyApp(){\r\n    const [searchQuery, setSearchQuery] = useState({query:\"\", type:\"\"})\r\n    const [resultsState, setResultsState] = useState([])\r\n    const [metricState, setMetricState] = useState(false)\r\n    const [isSearching, setSearching] = useState(false)\r\n    const [recipe, setRecipe] = useState ({title: '' , img: '', summary: ''})\r\n    const [recipeID, setRecipeID] = useState(-1)\r\n    const [totalResults, setTotalState] = useState(0)\r\n    const [instructions, setInstructions] = useState([])\r\n    const [ingredients, setIngred] = useState([]) \r\n    const [popularData, setPopularData] = useState([]) \r\n    const [exploreData, setExploreData] = useState([]) \r\n\r\n    function onPageChange(page, pageSize){\r\n        if(resultsState.length < 1 ) return\r\n        let offset = page * pageSize\r\n        if (offset % 100 === 0){\r\n            while(offset > resultsState.length){\r\n                searchRecipies(searchQuery.query, searchQuery.type,  resultsState.length)\r\n            }\r\n            searchRecipies(searchQuery, searchQuery.type, offset)\r\n        }  \r\n    }\r\n    //Switch between US measurement system and Metric measurement system\r\n    const toggleUnits = (bool) => {\r\n        setMetricState(bool)\r\n    }\r\n\r\n    //Get recipie information and display in app content\r\n    function handleChangeSelected(id){\r\n        console.log('Menu Log: Recipie selected, id' + {id})\r\n        setRecipeID(id)\r\n        getRecipe(id)\r\n    }\r\n\r\n    //Search for recipies using a query\r\n    const searchRecipies = (input, type, offset) => {\r\n        setSearching(true)\r\n        setSearchQuery({query:input, type:type})\r\n        fetch(encodeSearch(input, type, offset))\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }else\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                offset ? setResultsState(prev => [...prev , ...data.results]) : setResultsState(data.results)\r\n                setTotalState(data.totalResults)\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const getPopularData = (input, type, offset) => {\r\n        fetch(encodeSearch(input, type, offset, 6))\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }else\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                setPopularData(data.results)\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    \r\n    const getExploreData = (input, type, offset) => {\r\n        fetch(encodeSearch(input, type, offset, 10,\"random\"))\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }else\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                setExploreData(data.results)\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const getType = (input, type) => {\r\n        setSearching(true)\r\n        setSearchQuery({query:input, type:type})\r\n        fetch(encodeSearch(input, type))\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }else\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                setResultsState(data.results)\r\n                setTotalState(data.totalResults)\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const encodeSearch = (_query, _type, _offset, _num, _sort) =>{\r\n        let offset = _offset || \"\"\r\n        let type = _type || \"\"\r\n        let query = _query || \"\"\r\n        let num = _num || \"100\"\r\n        let sort = _sort || \"popularity\"\r\n        let request = \"https://api.spoonacular.com/recipes/complexSearch?apiKey=93b09acd5a44410d87094660a3bfb7ff&addRecipeNutrition=true&sort=\"+ sort +\"&number=\" + num + \"&instructionsRequired=true&query=\" + query +\"&offset=\" + offset +\"&type=\" + type\r\n        console.log(request)\r\n        return request\r\n    }\r\n\r\n    const encodeID = (id) =>{\r\n        let request = 'https://api.spoonacular.com/recipes/' + id + '/information?apiKey=93b09acd5a44410d87094660a3bfb7ff'\r\n        console.log(request)\r\n        return request\r\n    }\r\n\r\n    const getRecipe = (id) => {\r\n        console.log('API Log: fetching recipie')\r\n        fetch(encodeID(id))\r\n        .then(res => {\r\n            if (!res.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }else\r\n            return res.json()\r\n        }).then((data) => {\r\n            var instructions = data.analyzedInstructions \r\n            var ingred = data.extendedIngredients\r\n            instructions = instructions[0]\r\n            instructions = instructions.steps\r\n\r\n            setRecipe(data)\r\n            setInstructions(instructions)\r\n            setIngred(ingred)\r\n            console.log('API Log: Successful GET')\r\n        })\r\n        .catch((error) => {console.log(error)})\r\n        setSearching(false)\r\n    }\r\n\r\n    function returnHome(){\r\n        setRecipeID(-1)\r\n        setSearching(false)\r\n    }\r\n    return (\r\n        <div className=\"app\">\r\n        <AppHeader \r\n            toggleUnits={toggleUnits}\r\n            onSearch={searchRecipies} \r\n            returnHome={returnHome}\r\n            setResults={setResultsState}\r\n            />\r\n        <Layout className='layout-body'>\r\n                <BarList\r\n                    getType={getType}\r\n                    onSearch={searchRecipies}\r\n                    />\r\n\r\n                <Content className='content'>\r\n                    {\r\n                        isSearching ? \r\n                            <Results \r\n                                results={resultsState}\r\n                                totalResults={totalResults} \r\n                                onSelectChange={handleChangeSelected} \r\n                                onPageChange={onPageChange}/> \r\n                            : \r\n                            <AppContent\r\n                                ID={recipeID}\r\n                                recipe={recipe}\r\n                                instructions={instructions}\r\n                                ingred={ingredients}\r\n                                useMetric={metricState}\r\n                                popularData={popularData}\r\n                                getPopularData={getPopularData}\r\n                                exploreData={exploreData}\r\n                                getExploreData={getExploreData}\r\n                                onSelectChange={handleChangeSelected}\r\n                                />\r\n                    }\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center', color: 'white', zIndex: 1}}>\r\n                    Using Ant Design 2020 Created by Dushane Smith\r\n                </Footer>\r\n        </Layout>\r\n        </div>\r\n    );\r\n}\r\nexport default SimplyApp\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './components/css/index.css';\r\nimport SimplyApp from './SimplyApp';\r\nimport * as serviceWorker from './serviceWorker';\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <SimplyApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}