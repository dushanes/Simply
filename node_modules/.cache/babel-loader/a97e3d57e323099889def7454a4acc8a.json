{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _toConsumableArray from\"C:/Users/knightnight101/Desktop/Personal_Projects/Simply/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/knightnight101/Desktop/Personal_Projects/Simply/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"antd/lib/layout/style\";import _Layout from\"antd/lib/layout\";import React,{useState}from'react';import'./components/css/SimplyApp.less';import{AppHeader}from'./components/AppHeader';import{AppContent}from'./components/AppContent';import{BarList}from'./components/BarList';import'antd/dist/antd.less';import{Results}from'./components/Results';var Content=_Layout.Content,Footer=_Layout.Footer;function SimplyApp(){var _useState=useState({query:\"\",type:\"\"}),_useState2=_slicedToArray(_useState,2),searchQuery=_useState2[0],setSearchQuery=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),resultsState=_useState4[0],setResultsState=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),metricState=_useState6[0],setMetricState=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isSearching=_useState8[0],setSearching=_useState8[1];var _useState9=useState({title:'',img:'',summary:''}),_useState10=_slicedToArray(_useState9,2),recipe=_useState10[0],setRecipe=_useState10[1];var _useState11=useState(-1),_useState12=_slicedToArray(_useState11,2),recipeID=_useState12[0],setRecipeID=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),totalResults=_useState14[0],setTotalState=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),instructions=_useState16[0],setInstructions=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),ingredients=_useState18[0],setIngred=_useState18[1];var _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),popularData=_useState20[0],setPopularData=_useState20[1];var _useState21=useState([]),_useState22=_slicedToArray(_useState21,2),exploreData=_useState22[0],setExploreData=_useState22[1];function onPageChange(page,pageSize){if(resultsState.length<1)return;var offset=page*pageSize;if(offset%100===0){while(offset>resultsState.length){searchRecipies(searchQuery.query,searchQuery.type,resultsState.length);}searchRecipies(searchQuery,searchQuery.type,offset);}}//Switch between US measurement system and Metric measurement system\nvar toggleUnits=function toggleUnits(bool){setMetricState(bool);};//Get recipie information and display in app content\nfunction handleChangeSelected(id){console.log('Menu Log: Recipie selected, id'+{id:id});setRecipeID(id);getRecipe(id);}//Search for recipies using a query\nvar searchRecipies=function searchRecipies(input,type,offset){setSearching(true);setSearchQuery({query:input,type:type});fetch(encodeSearch(input,type,offset)).then(function(res){if(!res.ok){throw new Error('Network response was not ok');}else return res.json();}).then(function(data){offset?setResultsState(function(prev){return[].concat(_toConsumableArray(prev),_toConsumableArray(data.results));}):setResultsState(data.results);setTotalState(data.totalResults);}).catch(function(error){console.log(error);});};var getPopularData=function getPopularData(input,type,offset){fetch(encodeSearch(input,type,offset,6)).then(function(res){if(!res.ok){throw new Error('Network response was not ok');}else return res.json();}).then(function(data){setPopularData(data.results);}).catch(function(error){console.log(error);});};var getExploreData=function getExploreData(input,type,offset){fetch(encodeSearch(input,type,offset,10,\"random\")).then(function(res){if(!res.ok){throw new Error('Network response was not ok');}else return res.json();}).then(function(data){setExploreData(data.results);}).catch(function(error){console.log(error);});};var getType=function getType(input,type){setSearching(true);setSearchQuery({query:input,type:type});fetch(encodeSearch(input,type)).then(function(res){if(!res.ok){throw new Error('Network response was not ok');}else return res.json();}).then(function(data){setResultsState(data.results);setTotalState(data.totalResults);}).catch(function(error){console.log(error);});};var encodeSearch=function encodeSearch(_query,_type,_offset,_num,_sort){var offset=_offset||\"\";var type=_type||\"\";var query=_query||\"\";var num=_num||\"100\";var sort=_sort||\"popularity\";var request=\"https://api.spoonacular.com/recipes/complexSearch?apiKey=93b09acd5a44410d87094660a3bfb7ff&addRecipeNutrition=true&sort=\"+sort+\"&number=\"+num+\"&instructionsRequired=true&query=\"+query+\"&offset=\"+offset+\"&type=\"+type;console.log(request);return request;};var encodeID=function encodeID(id){var request='https://api.spoonacular.com/recipes/'+id+'/information?apiKey=93b09acd5a44410d87094660a3bfb7ff';console.log(request);return request;};var getRecipe=function getRecipe(id){console.log('API Log: fetching recipie');fetch(encodeID(id)).then(function(res){if(!res.ok){throw new Error('Network response was not ok');}else return res.json();}).then(function(data){var instructions=data.analyzedInstructions;var ingred=data.extendedIngredients;instructions=instructions[0];instructions=instructions.steps;setRecipe(data);setInstructions(instructions);setIngred(ingred);console.log('API Log: Successful GET');}).catch(function(error){console.log(error);});setSearching(false);};function returnHome(){setRecipeID(-1);setSearching(false);}return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(AppHeader,{toggleUnits:toggleUnits,onSearch:searchRecipies,returnHome:returnHome,setResults:setResultsState}),/*#__PURE__*/_jsxs(_Layout,{className:\"layout-body\",children:[/*#__PURE__*/_jsx(BarList,{getType:getType,onSearch:searchRecipies}),/*#__PURE__*/_jsx(Content,{className:\"content\",children:isSearching?/*#__PURE__*/_jsx(Results,{results:resultsState,totalResults:totalResults,onSelectChange:handleChangeSelected,onPageChange:onPageChange}):/*#__PURE__*/_jsx(AppContent,{ID:recipeID,recipe:recipe,instructions:instructions,ingred:ingredients,useMetric:metricState,popularData:popularData,getPopularData:getPopularData,exploreData:exploreData,getExploreData:getExploreData,onSelectChange:handleChangeSelected})}),/*#__PURE__*/_jsx(Footer,{style:{textAlign:'center',color:'white',zIndex:1},children:\"Using Ant Design 2020 Created by Dushane Smith\"})]})]});}export default SimplyApp;","map":{"version":3,"sources":["C:/Users/knightnight101/Desktop/Personal_Projects/Simply/src/SimplyApp.js"],"names":["React","useState","AppHeader","AppContent","BarList","Results","Content","Footer","SimplyApp","query","type","searchQuery","setSearchQuery","resultsState","setResultsState","metricState","setMetricState","isSearching","setSearching","title","img","summary","recipe","setRecipe","recipeID","setRecipeID","totalResults","setTotalState","instructions","setInstructions","ingredients","setIngred","popularData","setPopularData","exploreData","setExploreData","onPageChange","page","pageSize","length","offset","searchRecipies","toggleUnits","bool","handleChangeSelected","id","console","log","getRecipe","input","fetch","encodeSearch","then","res","ok","Error","json","data","prev","results","catch","error","getPopularData","getExploreData","getType","_query","_type","_offset","_num","_sort","num","sort","request","encodeID","analyzedInstructions","ingred","extendedIngredients","steps","returnHome","textAlign","color","zIndex"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './components/css/SimplyApp.less';\r\nimport { Layout } from 'antd'\r\nimport { AppHeader } from './components/AppHeader'\r\nimport { AppContent } from './components/AppContent'\r\nimport { BarList } from './components/BarList'\r\nimport 'antd/dist/antd.less'\r\nimport { Results } from './components/Results';\r\nconst {Content, Footer} = Layout\r\n\r\nfunction SimplyApp(){\r\n    const [searchQuery, setSearchQuery] = useState({query:\"\", type:\"\"})\r\n    const [resultsState, setResultsState] = useState([])\r\n    const [metricState, setMetricState] = useState(false)\r\n    const [isSearching, setSearching] = useState(false)\r\n    const [recipe, setRecipe] = useState ({title: '' , img: '', summary: ''})\r\n    const [recipeID, setRecipeID] = useState(-1)\r\n    const [totalResults, setTotalState] = useState(0)\r\n    const [instructions, setInstructions] = useState([])\r\n    const [ingredients, setIngred] = useState([]) \r\n    const [popularData, setPopularData] = useState([]) \r\n    const [exploreData, setExploreData] = useState([]) \r\n\r\n    function onPageChange(page, pageSize){\r\n        if(resultsState.length < 1 ) return\r\n        let offset = page * pageSize\r\n        if (offset % 100 === 0){\r\n            while(offset > resultsState.length){\r\n                searchRecipies(searchQuery.query, searchQuery.type,  resultsState.length)\r\n            }\r\n            searchRecipies(searchQuery, searchQuery.type, offset)\r\n        }  \r\n    }\r\n    //Switch between US measurement system and Metric measurement system\r\n    const toggleUnits = (bool) => {\r\n        setMetricState(bool)\r\n    }\r\n\r\n    //Get recipie information and display in app content\r\n    function handleChangeSelected(id){\r\n        console.log('Menu Log: Recipie selected, id' + {id})\r\n        setRecipeID(id)\r\n        getRecipe(id)\r\n    }\r\n\r\n    //Search for recipies using a query\r\n    const searchRecipies = (input, type, offset) => {\r\n        setSearching(true)\r\n        setSearchQuery({query:input, type:type})\r\n        fetch(encodeSearch(input, type, offset))\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }else\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                offset ? setResultsState(prev => [...prev , ...data.results]) : setResultsState(data.results)\r\n                setTotalState(data.totalResults)\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const getPopularData = (input, type, offset) => {\r\n        fetch(encodeSearch(input, type, offset, 6))\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }else\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                setPopularData(data.results)\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    \r\n    const getExploreData = (input, type, offset) => {\r\n        fetch(encodeSearch(input, type, offset, 10,\"random\"))\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }else\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                setExploreData(data.results)\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const getType = (input, type) => {\r\n        setSearching(true)\r\n        setSearchQuery({query:input, type:type})\r\n        fetch(encodeSearch(input, type))\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }else\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                setResultsState(data.results)\r\n                setTotalState(data.totalResults)\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const encodeSearch = (_query, _type, _offset, _num, _sort) =>{\r\n        let offset = _offset || \"\"\r\n        let type = _type || \"\"\r\n        let query = _query || \"\"\r\n        let num = _num || \"100\"\r\n        let sort = _sort || \"popularity\"\r\n        let request = \"https://api.spoonacular.com/recipes/complexSearch?apiKey=93b09acd5a44410d87094660a3bfb7ff&addRecipeNutrition=true&sort=\"+ sort +\"&number=\" + num + \"&instructionsRequired=true&query=\" + query +\"&offset=\" + offset +\"&type=\" + type\r\n        console.log(request)\r\n        return request\r\n    }\r\n\r\n    const encodeID = (id) =>{\r\n        let request = 'https://api.spoonacular.com/recipes/' + id + '/information?apiKey=93b09acd5a44410d87094660a3bfb7ff'\r\n        console.log(request)\r\n        return request\r\n    }\r\n\r\n    const getRecipe = (id) => {\r\n        console.log('API Log: fetching recipie')\r\n        fetch(encodeID(id))\r\n        .then(res => {\r\n            if (!res.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }else\r\n            return res.json()\r\n        }).then((data) => {\r\n            var instructions = data.analyzedInstructions \r\n            var ingred = data.extendedIngredients\r\n            instructions = instructions[0]\r\n            instructions = instructions.steps\r\n\r\n            setRecipe(data)\r\n            setInstructions(instructions)\r\n            setIngred(ingred)\r\n            console.log('API Log: Successful GET')\r\n        })\r\n        .catch((error) => {console.log(error)})\r\n        setSearching(false)\r\n    }\r\n\r\n    function returnHome(){\r\n        setRecipeID(-1)\r\n        setSearching(false)\r\n    }\r\n    return (\r\n        <div className=\"app\">\r\n        <AppHeader \r\n            toggleUnits={toggleUnits}\r\n            onSearch={searchRecipies} \r\n            returnHome={returnHome}\r\n            setResults={setResultsState}\r\n            />\r\n        <Layout className='layout-body'>\r\n                <BarList\r\n                    getType={getType}\r\n                    onSearch={searchRecipies}\r\n                    />\r\n\r\n                <Content className='content'>\r\n                    {\r\n                        isSearching ? \r\n                            <Results \r\n                                results={resultsState}\r\n                                totalResults={totalResults} \r\n                                onSelectChange={handleChangeSelected} \r\n                                onPageChange={onPageChange}/> \r\n                            : \r\n                            <AppContent\r\n                                ID={recipeID}\r\n                                recipe={recipe}\r\n                                instructions={instructions}\r\n                                ingred={ingredients}\r\n                                useMetric={metricState}\r\n                                popularData={popularData}\r\n                                getPopularData={getPopularData}\r\n                                exploreData={exploreData}\r\n                                getExploreData={getExploreData}\r\n                                onSelectChange={handleChangeSelected}\r\n                                />\r\n                    }\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center', color: 'white', zIndex: 1}}>\r\n                    Using Ant Design 2020 Created by Dushane Smith\r\n                </Footer>\r\n        </Layout>\r\n        </div>\r\n    );\r\n}\r\nexport default SimplyApp\r\n"]},"metadata":{},"sourceType":"module"}