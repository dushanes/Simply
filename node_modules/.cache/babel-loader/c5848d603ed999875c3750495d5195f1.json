{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"C:\\\\Users\\\\knightnight101\\\\Desktop\\\\Personal_Projects\\\\Simply\\\\src\\\\SimplyApp.js\";\nimport React, { useState } from 'react';\nimport './components/css/SimplyApp.less';\nimport { AppHeader } from './components/AppHeader';\nimport { AppSider } from './components/AppSider';\nimport { AppContent } from './components/AppContent';\nimport 'antd/dist/antd.css';\n\nconst SimplyApp = () => {\n  const [resultsState, setResultsState] = useState([]);\n  const [loadingState, setLoadingState] = useState(false);\n  const [metricState, setMetricState] = useState(false);\n  const [recipe, setRecipe] = useState({\n    title: '',\n    img: '',\n    summary: ''\n  });\n  const [recipeID, setRecipeID] = useState(-1);\n  const [totalResults, setTotalState] = useState(0);\n  const [instructions, setInstructions] = useState({});\n  const [ingredients, setIngred] = useState({}); //Switch between US measurement system and Metric measurement system\n\n  const toggleUnits = bool => {\n    setMetricState(bool);\n  }; //Search for recipies using a query\n\n\n  const searchRecipies = input => {\n    setLoadingState(true);\n    setResultsState([]);\n    fetch(encodeSearch(input)).then(res => res.json()).then(data => {\n      setResultsState(data['results']);\n      setTotalState(data['totalResults']);\n    }).catch(console.log);\n    setLoadingState(false);\n  };\n\n  const encodeSearch = query => {\n    let request = 'https://api.spoonacular.com/recipes/complexSearch?apiKey=93b09acd5a44410d87094660a3bfb7ff&sort=popularity&number=25&instructionsRequired=true&query=' + query;\n    console.log(request);\n    return request;\n  }; //Get recipie information and display in app content\n\n\n  const handleChangeSelected = id => {\n    console.log('Menu Log: Recipie selected, id' + {\n      id\n    });\n    setRecipeID(id);\n    getRecipe(id);\n  };\n\n  const getRecipe = id => {\n    console.log('API Log: fetching recipie');\n    fetch(encodeID(id)).then(res => res.json()).then(data => {\n      //TODO: rather confusing without context, looking for a better way while also avoiding a another api call\n      var instructions = data['analyzedInstructions'];\n      instructions = instructions[0];\n      instructions = instructions['steps'];\n      var ingred = data['extendedIngredients'];\n      setRecipe(data);\n      setInstructions(instructions);\n      setIngred(ingred);\n      console.log('API Log: Successful GET');\n    }).catch(console.log('API Log: error'));\n  };\n\n  const encodeID = id => {\n    let request = 'https://api.spoonacular.com/recipes/' + id + '/information?apiKey=93b09acd5a44410d87094660a3bfb7ff';\n    console.log(request);\n    return request;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    unitFunc: bool => toggleUnits(bool),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(_Layout, {\n    className: \"layout-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppSider, {\n    results: resultsState,\n    totalResults: totalResults,\n    onSelectChange: id => handleChangeSelected(id),\n    onSearch: query => searchRecipies(query),\n    loading: loadingState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AppContent, {\n    ID: recipeID,\n    recipe: recipe,\n    instructions: instructions,\n    ingred: ingredients,\n    useMetric: metricState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default SimplyApp;","map":{"version":3,"sources":["C:/Users/knightnight101/Desktop/Personal_Projects/Simply/src/SimplyApp.js"],"names":["React","useState","AppHeader","AppSider","AppContent","SimplyApp","resultsState","setResultsState","loadingState","setLoadingState","metricState","setMetricState","recipe","setRecipe","title","img","summary","recipeID","setRecipeID","totalResults","setTotalState","instructions","setInstructions","ingredients","setIngred","toggleUnits","bool","searchRecipies","input","fetch","encodeSearch","then","res","json","data","catch","console","log","query","request","handleChangeSelected","id","getRecipe","encodeID","ingred"],"mappings":"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","sourcesContent":["    import React, {useState} from 'react';\r\n    import './components/css/SimplyApp.less';\r\n    import { Layout } from 'antd'\r\n    import { AppHeader } from './components/AppHeader'\r\n    import { AppSider } from './components/AppSider'\r\n    import { AppContent } from './components/AppContent'\r\n    import 'antd/dist/antd.css';\r\n\r\n    const SimplyApp = () => {\r\n\r\n        const [resultsState, setResultsState] = useState([])\r\n        const [loadingState, setLoadingState] = useState(false)\r\n        const [metricState, setMetricState] = useState(false)\r\n        const [recipe, setRecipe] = useState ({title: '' , img: '', summary: ''})\r\n        const [recipeID, setRecipeID] = useState(-1)\r\n        const [totalResults, setTotalState] = useState(0)\r\n        const [instructions, setInstructions] = useState({})\r\n        const [ingredients, setIngred] = useState({})\r\n\r\n\r\n    \r\n\r\n    //Switch between US measurement system and Metric measurement system\r\n    const toggleUnits = (bool) => {\r\n        setMetricState(bool)\r\n    }\r\n\r\n    //Search for recipies using a query\r\n    const searchRecipies = (input) => {\r\n        setLoadingState(true)\r\n        setResultsState ([])\r\n\r\n        fetch(encodeSearch(input))\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            setResultsState(data['results'])\r\n            setTotalState(data['totalResults'])\r\n        })\r\n        .catch(console.log)\r\n        \r\n        setLoadingState(false)\r\n        \r\n    }\r\n\r\n    const encodeSearch = (query) =>{\r\n        let request = 'https://api.spoonacular.com/recipes/complexSearch?apiKey=93b09acd5a44410d87094660a3bfb7ff&sort=popularity&number=25&instructionsRequired=true&query=' + query\r\n        console.log(request)\r\n        return request\r\n    }\r\n\r\n    //Get recipie information and display in app content\r\n    const handleChangeSelected =(id) => {\r\n        console.log('Menu Log: Recipie selected, id' + {id})\r\n        setRecipeID(id)\r\n        getRecipe(id)\r\n    }\r\n\r\n    const getRecipe = (id) => {\r\n        console.log('API Log: fetching recipie')\r\n        fetch(encodeID(id))\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n        //TODO: rather confusing without context, looking for a better way while also avoiding a another api call\r\n            var instructions = data['analyzedInstructions']\r\n            instructions = instructions[0]\r\n            instructions = instructions['steps']\r\n\r\n            var ingred = data['extendedIngredients']\r\n            setRecipe(data)\r\n            setInstructions(instructions)\r\n            setIngred(ingred)\r\n            console.log('API Log: Successful GET')\r\n        })\r\n        .catch(console.log('API Log: error')\r\n        )\r\n    }\r\n\r\n    const encodeID = (id) =>{\r\n        let request = 'https://api.spoonacular.com/recipes/' + id + '/information?apiKey=93b09acd5a44410d87094660a3bfb7ff'\r\n        console.log(request)\r\n        return request\r\n    }\r\n    \r\n    return (\r\n        <div className=\"app\">\r\n        <AppHeader unitFunc={(bool) => toggleUnits(bool)}/>\r\n        <Layout className='layout-body'>\r\n            <AppSider \r\n            results={resultsState}\r\n            totalResults={totalResults}\r\n            onSelectChange={(id) => handleChangeSelected(id)} \r\n            onSearch={(query) => searchRecipies(query)}\r\n            loading={loadingState}/>\r\n            <AppContent \r\n            ID={recipeID} \r\n            recipe={recipe} \r\n            instructions={instructions} \r\n            ingred={ingredients}\r\n            useMetric={metricState}/>\r\n        </Layout>\r\n        </div>\r\n    );\r\n    }\r\n    export default SimplyApp\r\n"]},"metadata":{},"sourceType":"module"}