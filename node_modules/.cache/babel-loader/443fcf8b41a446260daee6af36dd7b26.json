{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Users/knightnight101/Desktop/Personal_Projects/Simply/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"antd/lib/layout/style\";import _Layout from\"antd/lib/layout\";import React,{useState}from'react';import'./components/css/SimplyApp.less';import{AppHeader}from'./components/AppHeader';import{AppSider}from'./components/AppSider';import{AppContent}from'./components/AppContent';import'antd/dist/antd.css';var Content=_Layout.Content;function SimplyApp(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),resultsState=_useState2[0],setResultsState=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),metricState=_useState4[0],setMetricState=_useState4[1];var _useState5=useState({title:'',img:'',summary:''}),_useState6=_slicedToArray(_useState5,2),recipe=_useState6[0],setRecipe=_useState6[1];var _useState7=useState(-1),_useState8=_slicedToArray(_useState7,2),recipeID=_useState8[0],setRecipeID=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),totalResults=_useState10[0],setTotalState=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),instructions=_useState12[0],setInstructions=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),ingredients=_useState14[0],setIngred=_useState14[1];//Switch between US measurement system and Metric measurement system\nvar toggleUnits=function toggleUnits(bool){setMetricState(bool);};//Get recipie information and display in app content\nvar handleChangeSelected=function handleChangeSelected(id){console.log('Menu Log: Recipie selected, id'+{id:id});setRecipeID(id);getRecipe(id);};//Search for recipies using a query\nvar searchRecipies=function searchRecipies(input){fetch(encodeSearch(input)).then(function(res){if(!res.ok){throw new Error('Network response was not ok');}else return res.json();}).then(function(data){setResultsState(data.results);setTotalState(data.totalResults);}).catch(function(error){console.log(error);});};var encodeSearch=function encodeSearch(query){var request='https://api.spoonacular.com/recipes/complexSearch?apiKey=93b09acd5a44410d87094660a3bfb7ff&sort=popularity&number=25&instructionsRequired=true&query='+query;console.log(request);return request;};var encodeID=function encodeID(id){var request='https://api.spoonacular.com/recipes/'+id+'/information?apiKey=93b09acd5a44410d87094660a3bfb7ff';console.log(request);return request;};var getRecipe=function getRecipe(id){console.log('API Log: fetching recipie');fetch(encodeID(id)).then(function(res){if(!res.ok){throw new Error('Network response was not ok');}else return res.json();}).then(function(data){var instructions=data.analyzedInstructions;var ingred=data.extendedIngredients;instructions=instructions[0];instructions=instructions.steps;setRecipe(data);setInstructions(instructions);setIngred(ingred);console.log('API Log: Successful GET');}).catch(function(error){console.log(error);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(AppHeader,{unitFunc:toggleUnits}),/*#__PURE__*/_jsxs(_Layout,{className:\"layout-body\",children:[/*#__PURE__*/_jsx(AppSider,{results:resultsState,totalResults:totalResults,onSelectChange:handleChangeSelected,onSearch:searchRecipies}),/*#__PURE__*/_jsx(_Layout,{children:/*#__PURE__*/_jsx(Content,{className:\"content\",children:/*#__PURE__*/_jsx(AppContent,{ID:recipeID,recipe:recipe,instructions:instructions,ingred:ingredients,useMetric:metricState})})})]})]});}export default SimplyApp;","map":{"version":3,"sources":["C:/Users/knightnight101/Desktop/Personal_Projects/Simply/src/SimplyApp.js"],"names":["React","useState","AppHeader","AppSider","AppContent","Content","SimplyApp","resultsState","setResultsState","metricState","setMetricState","title","img","summary","recipe","setRecipe","recipeID","setRecipeID","totalResults","setTotalState","instructions","setInstructions","ingredients","setIngred","toggleUnits","bool","handleChangeSelected","id","console","log","getRecipe","searchRecipies","input","fetch","encodeSearch","then","res","ok","Error","json","data","results","catch","error","query","request","encodeID","analyzedInstructions","ingred","extendedIngredients","steps"],"mappings":"0UAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAO,iCAAP,CAEA,OAASC,SAAT,KAA0B,wBAA1B,CACA,OAASC,QAAT,KAAyB,uBAAzB,CACA,OAASC,UAAT,KAA2B,yBAA3B,CACA,MAAO,oBAAP,CACA,GAAMC,CAAAA,OAAO,CAAG,QAAOA,OAAvB,CAEA,QAASC,CAAAA,SAAT,EAAoB,eACwBL,QAAQ,CAAC,EAAD,CADhC,wCACTM,YADS,eACKC,eADL,8BAEsBP,QAAQ,CAAC,KAAD,CAF9B,yCAETQ,WAFS,eAEIC,cAFJ,8BAGYT,QAAQ,CAAE,CAACU,KAAK,CAAE,EAAR,CAAaC,GAAG,CAAE,EAAlB,CAAsBC,OAAO,CAAE,EAA/B,CAAF,CAHpB,yCAGTC,MAHS,eAGDC,SAHC,8BAIgBd,QAAQ,CAAC,CAAC,CAAF,CAJxB,yCAITe,QAJS,eAICC,WAJD,8BAKsBhB,QAAQ,CAAC,CAAD,CAL9B,0CAKTiB,YALS,gBAKKC,aALL,gCAMwBlB,QAAQ,CAAC,EAAD,CANhC,2CAMTmB,YANS,gBAMKC,eANL,gCAOiBpB,QAAQ,CAAC,EAAD,CAPzB,2CAOTqB,WAPS,gBAOIC,SAPJ,gBAUhB;AACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAU,CAC1Bf,cAAc,CAACe,IAAD,CAAd,CACH,CAFD,CAIA;AACA,GAAMC,CAAAA,oBAAoB,CAAE,QAAtBA,CAAAA,oBAAsB,CAACC,EAAD,CAAQ,CAChCC,OAAO,CAACC,GAAR,CAAY,iCAAmC,CAACF,EAAE,CAAFA,EAAD,CAA/C,EACAV,WAAW,CAACU,EAAD,CAAX,CACAG,SAAS,CAACH,EAAD,CAAT,CACH,CAJD,CAMA;AACA,GAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAC9BC,KAAK,CAACC,YAAY,CAACF,KAAD,CAAb,CAAL,CACKG,IADL,CACU,SAAAC,GAAG,CAAI,CACT,GAAI,CAACA,GAAG,CAACC,EAAT,CAAa,CACT,KAAM,IAAIC,CAAAA,KAAJ,CAAU,6BAAV,CAAN,CACH,CAFD,IAGA,OAAOF,CAAAA,GAAG,CAACG,IAAJ,EAAP,CACH,CANL,EAOKJ,IAPL,CAOU,SAACK,IAAD,CAAU,CACZhC,eAAe,CAACgC,IAAI,CAACC,OAAN,CAAf,CACAtB,aAAa,CAACqB,IAAI,CAACtB,YAAN,CAAb,CACH,CAVL,EAUOwB,KAVP,CAUa,SAACC,KAAD,CAAW,CAChBf,OAAO,CAACC,GAAR,CAAYc,KAAZ,EACH,CAZL,EAaH,CAdD,CAgBA,GAAMT,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACU,KAAD,CAAU,CAC3B,GAAIC,CAAAA,OAAO,CAAG,uJAAyJD,KAAvK,CACAhB,OAAO,CAACC,GAAR,CAAYgB,OAAZ,EACA,MAAOA,CAAAA,OAAP,CACH,CAJD,CAMA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACnB,EAAD,CAAO,CACpB,GAAIkB,CAAAA,OAAO,CAAG,uCAAyClB,EAAzC,CAA8C,sDAA5D,CACAC,OAAO,CAACC,GAAR,CAAYgB,OAAZ,EACA,MAAOA,CAAAA,OAAP,CACH,CAJD,CAMA,GAAMf,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACH,EAAD,CAAQ,CACtBC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EACAI,KAAK,CAACa,QAAQ,CAACnB,EAAD,CAAT,CAAL,CACCQ,IADD,CACM,SAAAC,GAAG,CAAI,CACT,GAAI,CAACA,GAAG,CAACC,EAAT,CAAa,CACT,KAAM,IAAIC,CAAAA,KAAJ,CAAU,6BAAV,CAAN,CACH,CAFD,IAGA,OAAOF,CAAAA,GAAG,CAACG,IAAJ,EAAP,CACH,CAND,EAMGJ,IANH,CAMQ,SAACK,IAAD,CAAU,CACd,GAAIpB,CAAAA,YAAY,CAAGoB,IAAI,CAACO,oBAAxB,CACA,GAAIC,CAAAA,MAAM,CAAGR,IAAI,CAACS,mBAAlB,CACA7B,YAAY,CAAGA,YAAY,CAAC,CAAD,CAA3B,CACAA,YAAY,CAAGA,YAAY,CAAC8B,KAA5B,CAEAnC,SAAS,CAACyB,IAAD,CAAT,CACAnB,eAAe,CAACD,YAAD,CAAf,CACAG,SAAS,CAACyB,MAAD,CAAT,CACApB,OAAO,CAACC,GAAR,CAAY,yBAAZ,EACH,CAhBD,EAiBCa,KAjBD,CAiBO,SAACC,KAAD,CAAW,CAACf,OAAO,CAACC,GAAR,CAAYc,KAAZ,EAAmB,CAjBtC,EAkBH,CApBD,CAsBA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACA,KAAC,SAAD,EAAW,QAAQ,CAAEnB,WAArB,EADA,cAEA,eAAQ,SAAS,CAAC,aAAlB,wBACI,KAAC,QAAD,EACA,OAAO,CAAEjB,YADT,CAEA,YAAY,CAAEW,YAFd,CAGA,cAAc,CAAEQ,oBAHhB,CAIA,QAAQ,CAAEK,cAJV,EADJ,cAMI,oCACI,KAAC,OAAD,EAAS,SAAS,CAAC,SAAnB,uBACI,KAAC,UAAD,EACA,EAAE,CAAEf,QADJ,CAEA,MAAM,CAAEF,MAFR,CAGA,YAAY,CAAEM,YAHd,CAIA,MAAM,CAAEE,WAJR,CAKA,SAAS,CAAEb,WALX,EADJ,EADJ,EANJ,GAFA,GADJ,CAsBH,CACD,cAAeH,CAAAA,SAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport './components/css/SimplyApp.less';\r\nimport { Layout } from 'antd'\r\nimport { AppHeader } from './components/AppHeader'\r\nimport { AppSider } from './components/AppSider'\r\nimport { AppContent } from './components/AppContent'\r\nimport 'antd/dist/antd.css';\r\nconst Content = Layout.Content\r\n\r\nfunction SimplyApp(){\r\n    const [resultsState, setResultsState] = useState([])\r\n    const [metricState, setMetricState] = useState(false)\r\n    const [recipe, setRecipe] = useState ({title: '' , img: '', summary: ''})\r\n    const [recipeID, setRecipeID] = useState(-1)\r\n    const [totalResults, setTotalState] = useState(0)\r\n    const [instructions, setInstructions] = useState([])\r\n    const [ingredients, setIngred] = useState([]) \r\n\r\n\r\n    //Switch between US measurement system and Metric measurement system\r\n    const toggleUnits = (bool) => {\r\n        setMetricState(bool)\r\n    }\r\n\r\n    //Get recipie information and display in app content\r\n    const handleChangeSelected =(id) => {\r\n        console.log('Menu Log: Recipie selected, id' + {id})\r\n        setRecipeID(id)\r\n        getRecipe(id)\r\n    }\r\n\r\n    //Search for recipies using a query\r\n    const searchRecipies = (input) => {\r\n        fetch(encodeSearch(input))\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }else\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                setResultsState(data.results)\r\n                setTotalState(data.totalResults)\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const encodeSearch = (query) =>{\r\n        let request = 'https://api.spoonacular.com/recipes/complexSearch?apiKey=93b09acd5a44410d87094660a3bfb7ff&sort=popularity&number=25&instructionsRequired=true&query=' + query\r\n        console.log(request)\r\n        return request\r\n    }\r\n\r\n    const encodeID = (id) =>{\r\n        let request = 'https://api.spoonacular.com/recipes/' + id + '/information?apiKey=93b09acd5a44410d87094660a3bfb7ff'\r\n        console.log(request)\r\n        return request\r\n    }\r\n\r\n    const getRecipe = (id) => {\r\n        console.log('API Log: fetching recipie')\r\n        fetch(encodeID(id))\r\n        .then(res => {\r\n            if (!res.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }else\r\n            return res.json()\r\n        }).then((data) => {\r\n            var instructions = data.analyzedInstructions \r\n            var ingred = data.extendedIngredients\r\n            instructions = instructions[0]\r\n            instructions = instructions.steps\r\n\r\n            setRecipe(data)\r\n            setInstructions(instructions)\r\n            setIngred(ingred)\r\n            console.log('API Log: Successful GET')\r\n        })\r\n        .catch((error) => {console.log(error)})\r\n    }\r\n    \r\n    return (\r\n        <div className=\"app\">\r\n        <AppHeader unitFunc={toggleUnits}/>\r\n        <Layout className='layout-body'>\r\n            <AppSider \r\n            results={resultsState}\r\n            totalResults={totalResults}\r\n            onSelectChange={handleChangeSelected} \r\n            onSearch={searchRecipies}/>\r\n            <Layout>\r\n                <Content className='content'>\r\n                    <AppContent \r\n                    ID={recipeID} \r\n                    recipe={recipe} \r\n                    instructions={instructions} \r\n                    ingred={ingredients}\r\n                    useMetric={metricState}/>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n        </div>\r\n    );\r\n}\r\nexport default SimplyApp\r\n"]},"metadata":{},"sourceType":"module"}