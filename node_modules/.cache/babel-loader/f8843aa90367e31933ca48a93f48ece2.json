{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\knightnight101\\\\Desktop\\\\Personal_Projects\\\\Simply\\\\src\\\\SimplyApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './components/css/SimplyApp.less';\nimport { AppHeader } from './components/AppHeader';\nimport { AppContent } from './components/AppContent';\nimport { BarList } from './components/BarList';\nimport 'antd/dist/antd.less';\nimport { Results } from './components/Results';\nconst {\n  Content,\n  Footer\n} = _Layout;\n\nfunction SimplyApp() {\n  _s();\n\n  const [resultsState, setResultsState] = useState([]);\n  const [metricState, setMetricState] = useState(false);\n  const [isSearching, setSearching] = useState(false);\n  const [recipe, setRecipe] = useState({\n    title: '',\n    img: '',\n    summary: ''\n  });\n  const [recipeID, setRecipeID] = useState(-1);\n  const [totalResults, setTotalState] = useState(0);\n  const [instructions, setInstructions] = useState([]);\n  const [ingredients, setIngred] = useState([]); //Switch between US measurement system and Metric measurement system\n\n  const toggleUnits = bool => {\n    setMetricState(bool);\n  }; //Get recipie information and display in app content\n\n\n  const handleChangeSelected = id => {\n    console.log('Menu Log: Recipie selected, id' + {\n      id\n    });\n    setRecipeID(id);\n    getRecipe(id);\n  }; //Search for recipies using a query\n\n\n  const searchRecipies = input => {\n    setSearching(true);\n    fetch(encodeSearch(input)).then(res => {\n      if (!res.ok) {\n        throw new Error('Network response was not ok');\n      } else return res.json();\n    }).then(data => {\n      setResultsState(data.results);\n      setTotalState(data.totalResults);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const encodeSearch = query => {\n    let request = 'https://api.spoonacular.com/recipes/complexSearch?apiKey=93b09acd5a44410d87094660a3bfb7ff&sort=popularity&number=25&instructionsRequired=true&query=' + query;\n    console.log(request);\n    return request;\n  };\n\n  const encodeID = id => {\n    let request = 'https://api.spoonacular.com/recipes/' + id + '/information?apiKey=93b09acd5a44410d87094660a3bfb7ff';\n    console.log(request);\n    return request;\n  };\n\n  const getRecipe = id => {\n    console.log('API Log: fetching recipie');\n    fetch(encodeID(id)).then(res => {\n      if (!res.ok) {\n        throw new Error('Network response was not ok');\n      } else return res.json();\n    }).then(data => {\n      var instructions = data.analyzedInstructions;\n      var ingred = data.extendedIngredients;\n      instructions = instructions[0];\n      instructions = instructions.steps;\n      setRecipe(data);\n      setInstructions(instructions);\n      setIngred(ingred);\n      console.log('API Log: Successful GET');\n    }).catch(error => {\n      console.log(error);\n    });\n    setSearching(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n      unitFunc: toggleUnits,\n      onSearch: searchRecipies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Layout, {\n      className: \"layout-body\",\n      children: /*#__PURE__*/_jsxDEV(_Layout, {\n        children: [/*#__PURE__*/_jsxDEV(BarList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Content, {\n          className: \"content\",\n          children: isSearching ? /*#__PURE__*/_jsxDEV(Results, {\n            results: resultsState,\n            totalResults: totalResults,\n            onSelectChange: handleChangeSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(AppContent, {\n            ID: recipeID,\n            recipe: recipe,\n            instructions: instructions,\n            ingred: ingredients,\n            useMetric: metricState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          style: {\n            textAlign: 'center',\n            position: 'absolute',\n            bottom: 0\n          },\n          children: \"Using Ant Design 2020 Created by Dushane Smith\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SimplyApp, \"F7Xhu0S5PX6OkYgxbZFvFYR01mA=\");\n\n_c = SimplyApp;\nexport default SimplyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimplyApp\");","map":{"version":3,"sources":["C:/Users/knightnight101/Desktop/Personal_Projects/Simply/src/SimplyApp.js"],"names":["React","useState","AppHeader","AppContent","BarList","Results","Content","Footer","SimplyApp","resultsState","setResultsState","metricState","setMetricState","isSearching","setSearching","recipe","setRecipe","title","img","summary","recipeID","setRecipeID","totalResults","setTotalState","instructions","setInstructions","ingredients","setIngred","toggleUnits","bool","handleChangeSelected","id","console","log","getRecipe","searchRecipies","input","fetch","encodeSearch","then","res","ok","Error","json","data","results","catch","error","query","request","encodeID","analyzedInstructions","ingred","extendedIngredients","steps","textAlign","position","bottom"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './components/css/SimplyApp.less';\r\nimport { Layout } from 'antd'\r\nimport { AppHeader } from './components/AppHeader'\r\nimport { AppContent } from './components/AppContent'\r\nimport { BarList } from './components/BarList'\r\nimport 'antd/dist/antd.less'\r\nimport { Results } from './components/Results';\r\nconst {Content, Footer} = Layout\r\n\r\nfunction SimplyApp(){\r\n    const [resultsState, setResultsState] = useState([])\r\n    const [metricState, setMetricState] = useState(false)\r\n    const [isSearching, setSearching] = useState(false)\r\n    const [recipe, setRecipe] = useState ({title: '' , img: '', summary: ''})\r\n    const [recipeID, setRecipeID] = useState(-1)\r\n    const [totalResults, setTotalState] = useState(0)\r\n    const [instructions, setInstructions] = useState([])\r\n    const [ingredients, setIngred] = useState([]) \r\n\r\n\r\n    //Switch between US measurement system and Metric measurement system\r\n    const toggleUnits = (bool) => {\r\n        setMetricState(bool)\r\n    }\r\n\r\n    //Get recipie information and display in app content\r\n    const handleChangeSelected =(id) => {\r\n        console.log('Menu Log: Recipie selected, id' + {id})\r\n        setRecipeID(id)\r\n        getRecipe(id)\r\n    }\r\n\r\n    //Search for recipies using a query\r\n    const searchRecipies = (input) => {\r\n        setSearching(true)\r\n        fetch(encodeSearch(input))\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }else\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                setResultsState(data.results)\r\n                setTotalState(data.totalResults)\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const encodeSearch = (query) =>{\r\n        let request = 'https://api.spoonacular.com/recipes/complexSearch?apiKey=93b09acd5a44410d87094660a3bfb7ff&sort=popularity&number=25&instructionsRequired=true&query=' + query\r\n        console.log(request)\r\n        return request\r\n    }\r\n\r\n    const encodeID = (id) =>{\r\n        let request = 'https://api.spoonacular.com/recipes/' + id + '/information?apiKey=93b09acd5a44410d87094660a3bfb7ff'\r\n        console.log(request)\r\n        return request\r\n    }\r\n\r\n    const getRecipe = (id) => {\r\n        console.log('API Log: fetching recipie')\r\n        fetch(encodeID(id))\r\n        .then(res => {\r\n            if (!res.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }else\r\n            return res.json()\r\n        }).then((data) => {\r\n            var instructions = data.analyzedInstructions \r\n            var ingred = data.extendedIngredients\r\n            instructions = instructions[0]\r\n            instructions = instructions.steps\r\n\r\n            setRecipe(data)\r\n            setInstructions(instructions)\r\n            setIngred(ingred)\r\n            console.log('API Log: Successful GET')\r\n        })\r\n        .catch((error) => {console.log(error)})\r\n        setSearching(false)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"app\">\r\n        <AppHeader unitFunc={toggleUnits}\r\n            onSearch={searchRecipies}/>\r\n        <Layout className='layout-body'>\r\n            <Layout>\r\n                <BarList/>\r\n\r\n                <Content className='content'>\r\n                    {\r\n                        isSearching ? \r\n                            <Results results={resultsState} totalResults={totalResults} onSelectChange={handleChangeSelected}/> \r\n                            : \r\n                            <AppContent\r\n                            ID={recipeID}\r\n                            recipe={recipe}\r\n                            instructions={instructions}\r\n                            ingred={ingredients}\r\n                            useMetric={metricState}/>\r\n                    }\r\n                </Content>\r\n\r\n                <Footer style={{ textAlign: 'center', position: 'absolute', bottom: 0 }}>Using Ant Design 2020 Created by Dushane Smith</Footer>\r\n            </Layout>\r\n        </Layout>\r\n        </div>\r\n    );\r\n}\r\nexport default SimplyApp\r\n"]},"metadata":{},"sourceType":"module"}