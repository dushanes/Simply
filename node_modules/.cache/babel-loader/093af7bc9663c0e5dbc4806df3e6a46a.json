{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\knightnight101\\\\Desktop\\\\Personal_Projects\\\\Simply\\\\src\\\\components\\\\Results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.less';\nimport './css/Results.css';\nimport { useTransition, animated, config } from 'react-spring';\nimport { ResultCard } from './ResultCard';\nexport const Results = _props => {\n  _s();\n\n  const {\n    results\n  } = _props;\n  const transition = useTransition(results, result => result.id, {\n    from: {\n      opacity: 0,\n      marginLeft: -100,\n      marginRight: 100\n    },\n    enter: {\n      opacity: 1,\n      marginLeft: 0,\n      marginRight: 0\n    },\n    leave: {\n      opacity: 0,\n      marginLeft: -100,\n      marginRight: 100\n    },\n    delay: 100\n  });\n  const list = transition.map(({\n    item,\n    props,\n    key\n  }) => item && /*#__PURE__*/_jsxDEV(animated.div, {\n    style: props,\n    children: /*#__PURE__*/_jsxDEV(ResultCard, {\n      result: item,\n      onSelectChange: _props.onSelectChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: results && /*#__PURE__*/_jsxDEV(_List, {\n      grid: {\n        gutter: 16,\n        xs: 1,\n        sm: 2,\n        md: 4,\n        lg: 4,\n        xl: 6,\n        xxl: 3\n      },\n      dataSource: list,\n      renderItem: item => /*#__PURE__*/_jsxDEV(_List.Item, {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Results, \"XDP2FMOoI4V9T6IPAMHOJnf8FXw=\", false, function () {\n  return [useTransition];\n});\n\n_c = Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["C:/Users/knightnight101/Desktop/Personal_Projects/Simply/src/components/Results.js"],"names":["React","useState","useTransition","animated","config","ResultCard","Results","_props","results","transition","result","id","from","opacity","marginLeft","marginRight","enter","leave","delay","list","map","item","props","key","onSelectChange","gutter","xs","sm","md","lg","xl","xxl"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,qBAAP;AACA,OAAO,mBAAP;AAEA,SAAQC,aAAR,EAAuBC,QAAvB,EAAiCC,MAAjC,QAA8C,cAA9C;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,MAAMC,OAAO,GAAIC,MAAD,IAAY;AAAA;;AAC/B,QAAM;AAACC,IAAAA;AAAD,MAAYD,MAAlB;AACA,QAAME,UAAU,GAAGP,aAAa,CAAEM,OAAF,EAAWE,MAAM,IAAIA,MAAM,CAACC,EAA5B,EAAgC;AAC5DC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,UAAU,EAAE,CAAC,GAA3B;AAAgCC,MAAAA,WAAW,EAAE;AAA7C,KADsD;AAE5DC,IAAAA,KAAK,EAAE;AAAEH,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,UAAU,EAAE,CAA1B;AAA6BC,MAAAA,WAAW,EAAE;AAA1C,KAFqD;AAG5DE,IAAAA,KAAK,EAAE;AAAEJ,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,UAAU,EAAE,CAAC,GAA3B;AAAgCC,MAAAA,WAAW,EAAE;AAA7C,KAHqD;AAI5DG,IAAAA,KAAK,EAAE;AAJqD,GAAhC,CAAhC;AAOA,QAAMC,IAAI,GAAGV,UAAU,CAACW,GAAX,CAAe,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GAAD,KAAwBF,IAAI,iBACxD,QAAC,QAAD,CAAU,GAAV;AAAwB,IAAA,KAAK,EAAEC,KAA/B;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAED,IAApB;AAA0B,MAAA,cAAc,EAAEd,MAAM,CAACiB;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ,KAAmBD,GAAnB;AAAA;AAAA;AAAA;AAAA,UADa,CAAb;AAMA,sBACI;AAAA,cACKf,OAAO,iBACJ;AACI,MAAA,IAAI,EAAE;AACNiB,QAAAA,MAAM,EAAE,EADF;AAENC,QAAAA,EAAE,EAAE,CAFE;AAGNC,QAAAA,EAAE,EAAE,CAHE;AAINC,QAAAA,EAAE,EAAE,CAJE;AAKNC,QAAAA,EAAE,EAAE,CALE;AAMNC,QAAAA,EAAE,EAAE,CANE;AAONC,QAAAA,GAAG,EAAE;AAPC,OADV;AAUI,MAAA,UAAU,EAAEZ,IAVhB;AAWI,MAAA,UAAU,EAAEE,IAAI,iBAChB,cAAM,IAAN;AAAA,kBACKA;AADL;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA;AAFR,mBADJ;AAuBH,CAtCM;;GAAMf,O;UAEUJ,a;;;KAFVI,O","sourcesContent":["import React, {useState} from 'react'\r\nimport 'antd/dist/antd.less';\r\nimport './css/Results.css'\r\nimport { List, Card } from 'antd';\r\nimport {useTransition, animated, config} from 'react-spring'\r\nimport { ResultCard } from './ResultCard';\r\n\r\nexport const Results = (_props) => {\r\n    const {results} = _props\r\n    const transition = useTransition( results, result => result.id, {\r\n        from: { opacity: 0, marginLeft: -100, marginRight: 100},\r\n        enter: { opacity: 1, marginLeft: 0, marginRight: 0},\r\n        leave: { opacity: 0, marginLeft: -100, marginRight: 100},\r\n        delay: 100,\r\n    })\r\n    \r\n    const list = transition.map(({item, props, key}) => item &&\r\n    <animated.div key={key} style={props}>\r\n        <ResultCard result={item} onSelectChange={_props.onSelectChange}/>\r\n    </animated.div>\r\n)\r\n\r\n    return (\r\n        <>\r\n            {results &&\r\n                <List\r\n                    grid={{\r\n                    gutter: 16,\r\n                    xs: 1,\r\n                    sm: 2,\r\n                    md: 4,\r\n                    lg: 4,\r\n                    xl: 6,\r\n                    xxl: 3,\r\n                    }}\r\n                    dataSource={list}\r\n                    renderItem={item => (\r\n                    <List.Item>\r\n                        {item}\r\n                    </List.Item>\r\n                    )}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}