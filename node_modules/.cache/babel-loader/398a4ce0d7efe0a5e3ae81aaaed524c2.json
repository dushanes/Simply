{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\knightnight101\\\\Desktop\\\\Personal_Projects\\\\Simply\\\\src\\\\SimplyApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './components/css/SimplyApp.less';\nimport { AppHeader } from './components/AppHeader';\nimport { AppSider } from './components/AppSider';\nimport { AppContent } from './components/AppContent';\nimport 'antd/dist/antd.css';\nconst Content = _Layout.Content;\n\nfunction SimplyApp() {\n  _s();\n\n  const [resultsState, setResultsState] = useState([]);\n  const [metricState, setMetricState] = useState(false);\n  const [recipe, setRecipe] = useState({\n    title: '',\n    img: '',\n    summary: ''\n  });\n  const [recipeID, setRecipeID] = useState(-1);\n  const [totalResults, setTotalState] = useState(0);\n  const [instructions, setInstructions] = useState([]);\n  const [ingredients, setIngred] = useState([]); //Switch between US measurement system and Metric measurement system\n\n  const toggleUnits = bool => {\n    setMetricState(bool);\n  }; //Search for recipies using a query\n\n\n  const searchRecipies = input => {\n    fetch(encodeSearch(input)).then(res => {\n      if (!res.ok) {\n        throw new Error('Network response was not ok');\n      } else res.json();\n    }).then(data => {\n      setResultsState(data.results);\n      setTotalState(data.totalResults);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const encodeSearch = query => {\n    let request = 'https://api.spoonacular.com/recipes/complexSearch?apiKey=93b09acd5a44410d87094660a3bfb7ff&sort=popularity&number=25&instructionsRequired=true&query=' + query;\n    console.log(request);\n    return request;\n  }; //Get recipie information and display in app content\n\n\n  const handleChangeSelected = id => {\n    console.log('Menu Log: Recipie selected, id' + {\n      id\n    });\n    setRecipeID(id);\n    getRecipe(id);\n  };\n\n  const getRecipe = id => {\n    console.log('API Log: fetching recipie');\n    fetch(encodeID(id)).then(res => res.json()).then(data => {\n      //TODO: rather confusing without context, looking for a better way while also avoiding a another api call\n      var instructions = data['analyzedInstructions'];\n      instructions = instructions[0];\n      instructions = instructions['steps'];\n      var ingred = data['extendedIngredients'];\n      setRecipe(data);\n      setInstructions(instructions);\n      setIngred(ingred);\n      console.log('API Log: Successful GET');\n    }).catch(console.log('API Log: error'));\n  };\n\n  const encodeID = id => {\n    let request = 'https://api.spoonacular.com/recipes/' + id + '/information?apiKey=93b09acd5a44410d87094660a3bfb7ff';\n    console.log(request);\n    return request;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n      unitFunc: toggleUnits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Layout, {\n      className: \"layout-body\",\n      children: [/*#__PURE__*/_jsxDEV(AppSider, {\n        results: resultsState,\n        totalResults: totalResults,\n        onSelectChange: handleChangeSelected,\n        onSearch: searchRecipies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(_Layout, {\n        children: /*#__PURE__*/_jsxDEV(Content, {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(AppContent, {\n            ID: recipeID,\n            recipe: recipe,\n            instructions: instructions,\n            ingred: ingredients,\n            useMetric: metricState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SimplyApp, \"2clJ6Bp3+J3mmtX3B6tKlNKyt1U=\");\n\n_c = SimplyApp;\nexport default SimplyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimplyApp\");","map":{"version":3,"sources":["C:/Users/knightnight101/Desktop/Personal_Projects/Simply/src/SimplyApp.js"],"names":["React","useState","AppHeader","AppSider","AppContent","Content","SimplyApp","resultsState","setResultsState","metricState","setMetricState","recipe","setRecipe","title","img","summary","recipeID","setRecipeID","totalResults","setTotalState","instructions","setInstructions","ingredients","setIngred","toggleUnits","bool","searchRecipies","input","fetch","encodeSearch","then","res","ok","Error","json","data","results","catch","error","console","log","query","request","handleChangeSelected","id","getRecipe","encodeID","ingred"],"mappings":"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","sourcesContent":["    import React, {useState} from 'react';\r\n    import './components/css/SimplyApp.less';\r\n    import { Layout } from 'antd'\r\n    import { AppHeader } from './components/AppHeader'\r\n    import { AppSider } from './components/AppSider'\r\n    import { AppContent } from './components/AppContent'\r\n    import 'antd/dist/antd.css';\r\n    const Content = Layout.Content\r\n\r\n    function SimplyApp(){\r\n\r\n        const [resultsState, setResultsState] = useState([])\r\n        const [metricState, setMetricState] = useState(false)\r\n        const [recipe, setRecipe] = useState ({title: '' , img: '', summary: ''})\r\n        const [recipeID, setRecipeID] = useState(-1)\r\n        const [totalResults, setTotalState] = useState(0)\r\n        const [instructions, setInstructions] = useState([])\r\n        const [ingredients, setIngred] = useState([]) \r\n\r\n\r\n    //Switch between US measurement system and Metric measurement system\r\n    const toggleUnits = (bool) => {\r\n        setMetricState(bool)\r\n    }\r\n\r\n    //Search for recipies using a query\r\n    const searchRecipies = (input) => {\r\n        fetch(encodeSearch(input))\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }else\r\n                res.json()\r\n            })\r\n            .then((data) => {\r\n                setResultsState(data.results)\r\n                setTotalState(data.totalResults)\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const encodeSearch = (query) =>{\r\n        let request = 'https://api.spoonacular.com/recipes/complexSearch?apiKey=93b09acd5a44410d87094660a3bfb7ff&sort=popularity&number=25&instructionsRequired=true&query=' + query\r\n        console.log(request)\r\n        return request\r\n    }\r\n\r\n    //Get recipie information and display in app content\r\n    const handleChangeSelected =(id) => {\r\n        console.log('Menu Log: Recipie selected, id' + {id})\r\n        setRecipeID(id)\r\n        getRecipe(id)\r\n    }\r\n\r\n    const getRecipe = (id) => {\r\n        console.log('API Log: fetching recipie')\r\n        fetch(encodeID(id))\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n        //TODO: rather confusing without context, looking for a better way while also avoiding a another api call\r\n            var instructions = data['analyzedInstructions']\r\n            instructions = instructions[0]\r\n            instructions = instructions['steps']\r\n\r\n            var ingred = data['extendedIngredients']\r\n            setRecipe(data)\r\n            setInstructions(instructions)\r\n            setIngred(ingred)\r\n            console.log('API Log: Successful GET')\r\n        })\r\n        .catch(console.log('API Log: error')\r\n        )\r\n    }\r\n\r\n    const encodeID = (id) =>{\r\n        let request = 'https://api.spoonacular.com/recipes/' + id + '/information?apiKey=93b09acd5a44410d87094660a3bfb7ff'\r\n        console.log(request)\r\n        return request\r\n    }\r\n    \r\n    return (\r\n        <div className=\"app\">\r\n        <AppHeader unitFunc={toggleUnits}/>\r\n        <Layout className='layout-body'>\r\n            <AppSider \r\n            results={resultsState}\r\n            totalResults={totalResults}\r\n            onSelectChange={handleChangeSelected} \r\n            onSearch={searchRecipies}/>\r\n            <Layout>\r\n                <Content className='content'>\r\n                    <AppContent \r\n                    ID={recipeID} \r\n                    recipe={recipe} \r\n                    instructions={instructions} \r\n                    ingred={ingredients}\r\n                    useMetric={metricState}/>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n        </div>\r\n    );\r\n    }\r\n    export default SimplyApp\r\n"]},"metadata":{},"sourceType":"module"}