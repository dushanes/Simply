{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\knightnight101\\\\Desktop\\\\Personal_Projects\\\\Simply\\\\src\\\\SimplyApp.js\";\nimport React, { useState } from 'react';\nimport './components/css/SimplyApp.less';\nimport { AppHeader } from './components/AppHeader';\nimport { AppSider } from './components/AppSider';\nimport { AppContent } from './components/AppContent';\nimport 'antd/dist/antd.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.encodeSearch = query => {\n      let request = 'https://api.spoonacular.com/recipes/complexSearch?apiKey=93b09acd5a44410d87094660a3bfb7ff&sort=popularity&number=25&instructionsRequired=true&query=' + query;\n      console.log(request);\n      return request;\n    };\n\n    this.encodeID = id => {\n      let request = 'https://api.spoonacular.com/recipes/' + id + '/information?apiKey=93b09acd5a44410d87094660a3bfb7ff';\n      console.log(request);\n      return request;\n    };\n\n    this.state = {\n      loadingResults: true,\n      results: [],\n      recipe: {\n        'title': '',\n        'img': '',\n        'summary': ''\n      },\n      selectedRecipe: -1,\n      metric: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        unitFunc: bool => this.toggleUnits(bool)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(_Layout, {\n        className: \"layout-body\",\n        children: [/*#__PURE__*/_jsxDEV(AppSider, {\n          results: this.state.results,\n          totalResults: this.state.totalResults,\n          onSelectChange: id => this.handleChangeSelected(id),\n          onSearch: query => this.searchRecipies(query),\n          loading: this.state.loadingResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AppContent, {\n          ID: this.state.selectedRecipe,\n          recipe: this.state.recipe,\n          instructions: this.state.instructions,\n          ingred: this.state.ingred,\n          useMetric: this.state.metric\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  } //Switch between US measurement system and Metric measurement system\n\n\n  toggleUnits(bool) {\n    this.setState({\n      metric: bool\n    });\n  } //Search for recipies using a query\n\n\n  searchRecipies(input) {\n    this.setState({\n      loadingResults: false\n    });\n    this.setState({\n      results: []\n    });\n    this.setState({\n      totalResults: 0\n    });\n    fetch(this.encodeSearch(input)).then(res => res.json()).then(data => {\n      this.setState({\n        loadingResults: true\n      });\n      this.setState({\n        results: data.results\n      });\n      this.setState({\n        totalResults: data.totalResults\n      });\n    }).catch(console.log);\n  }\n\n  //Get recipie information and display in app content\n  handleChangeSelected(id) {\n    console.log('Menu Log: Recipie selected, id' + {\n      id\n    });\n    this.setState({\n      selectedRecipe: id\n    });\n    this.getRecipe(id);\n  }\n\n  getRecipe(id) {\n    console.log('API Log: fetching recipie');\n    fetch(this.encodeID(id)).then(res => res.json()).then(data => {\n      //TODO: rather confusing without context, looking for a better way while also avoiding a another api call\n      var instructions = data['analyzedInstructions'];\n      instructions = instructions[0];\n      instructions = instructions['steps'];\n      var ingred = data['extendedIngredients'];\n      this.setState({\n        recipe: data,\n        instructions: instructions,\n        ingred: ingred\n      });\n      console.log('API Log: Successful GET');\n    }).catch(console.log('API Log: error'));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/knightnight101/Desktop/Personal_Projects/Simply/src/SimplyApp.js"],"names":["React","useState","AppHeader","AppSider","AppContent","App","Component","constructor","props","encodeSearch","query","request","console","log","encodeID","id","state","loadingResults","results","recipe","selectedRecipe","metric","render","bool","toggleUnits","totalResults","handleChangeSelected","searchRecipies","instructions","ingred","setState","input","fetch","then","res","json","data","catch","getRecipe"],"mappings":";;;;AAAI,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,iCAAP;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAO,oBAAP;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAyDlBC,YAzDkB,GAyDFC,KAAD,IAAU;AACvB,UAAIC,OAAO,GAAG,yJAAyJD,KAAvK;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,aAAOA,OAAP;AACD,KA7DiB;;AAAA,SA2FlBG,QA3FkB,GA2FNC,EAAD,IAAO;AACd,UAAIJ,OAAO,GAAG,yCAAyCI,EAAzC,GAA8C,sDAA5D;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,aAAOA,OAAP;AACH,KA/FiB;;AAGhB,SAAKK,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,IADL;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,MAAM,EAAE;AAAC,iBAAS,EAAV;AACE,eAAO,EADT;AAEA,mBAAW;AAFX,OAHG;AAMXC,MAAAA,cAAc,EAAE,CAAC,CANN;AAOXC,MAAAA,MAAM,EAAE;AAPG,KAAb;AASD;;AAEDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAGC,IAAD,IAAU,KAAKC,WAAL,CAAiBD,IAAjB;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA,gCACE,QAAC,QAAD;AACE,UAAA,OAAO,EAAE,KAAKP,KAAL,CAAWE,OADtB;AAEE,UAAA,YAAY,EAAE,KAAKF,KAAL,CAAWS,YAF3B;AAGE,UAAA,cAAc,EAAGV,EAAD,IAAQ,KAAKW,oBAAL,CAA0BX,EAA1B,CAH1B;AAIE,UAAA,QAAQ,EAAGL,KAAD,IAAW,KAAKiB,cAAL,CAAoBjB,KAApB,CAJvB;AAKE,UAAA,OAAO,EAAE,KAAKM,KAAL,CAAWC;AALtB;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,UAAD;AACE,UAAA,EAAE,EAAE,KAAKD,KAAL,CAAWI,cADjB;AAEE,UAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWG,MAFrB;AAGE,UAAA,YAAY,EAAE,KAAKH,KAAL,CAAWY,YAH3B;AAIE,UAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,MAJrB;AAKE,UAAA,SAAS,EAAE,KAAKb,KAAL,CAAWK;AALxB;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD,GAnC4B,CAqC7B;;;AACAG,EAAAA,WAAW,CAACD,IAAD,EAAM;AACf,SAAKO,QAAL,CAAc;AAACT,MAAAA,MAAM,EAAEE;AAAT,KAAd;AACD,GAxC4B,CA0C7B;;;AACAI,EAAAA,cAAc,CAACI,KAAD,EAAO;AACnB,SAAKD,QAAL,CAAc;AAACb,MAAAA,cAAc,EAAE;AAAjB,KAAd;AACA,SAAKa,QAAL,CAAe;AAACZ,MAAAA,OAAO,EAAG;AAAX,KAAf;AACA,SAAKY,QAAL,CAAc;AAACL,MAAAA,YAAY,EAAE;AAAf,KAAd;AAEAO,IAAAA,KAAK,CAAC,KAAKvB,YAAL,CAAkBsB,KAAlB,CAAD,CAAL,CACCE,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;AACZ,WAAKN,QAAL,CAAc;AAACb,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACA,WAAKa,QAAL,CAAe;AAACZ,QAAAA,OAAO,EAAGkB,IAAI,CAAClB;AAAhB,OAAf;AACA,WAAKY,QAAL,CAAc;AAACL,QAAAA,YAAY,EAAEW,IAAI,CAACX;AAApB,OAAd;AACH,KAND,EAOCY,KAPD,CAOOzB,OAAO,CAACC,GAPf;AAQD;;AAQH;AACEa,EAAAA,oBAAoB,CAACX,EAAD,EAAK;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmC;AAACE,MAAAA;AAAD,KAA/C;AACA,SAAKe,QAAL,CAAc;AAACV,MAAAA,cAAc,EAAEL;AAAjB,KAAd;AACA,SAAKuB,SAAL,CAAevB,EAAf;AACD;;AAEDuB,EAAAA,SAAS,CAACvB,EAAD,EAAI;AACXH,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAmB,IAAAA,KAAK,CAAC,KAAKlB,QAAL,CAAcC,EAAd,CAAD,CAAL,CACCkB,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd;AACE,UAAIR,YAAY,GAAGQ,IAAI,CAAC,sBAAD,CAAvB;AACAR,MAAAA,YAAY,GAAGA,YAAY,CAAC,CAAD,CAA3B;AACAA,MAAAA,YAAY,GAAGA,YAAY,CAAC,OAAD,CAA3B;AAEA,UAAIC,MAAM,GAAGO,IAAI,CAAC,qBAAD,CAAjB;AAEA,WAAKN,QAAL,CAAe;AAACX,QAAAA,MAAM,EAAGiB,IAAV;AACfR,QAAAA,YAAY,EAAEA,YADC;AAEfC,QAAAA,MAAM,EAAEA;AAFO,OAAf;AAGAjB,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,KAdD,EAeCwB,KAfD,CAeOzB,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAfP;AAiBH;;AA1F8B;;AAmG/B,eAAeR,GAAf","sourcesContent":["    import React, {useState} from 'react';\r\n    import './components/css/SimplyApp.less';\r\n    import { Layout } from 'antd'\r\n    import { AppHeader } from './components/AppHeader'\r\n    import { AppSider } from './components/AppSider'\r\n    import { AppContent } from './components/AppContent'\r\n    import 'antd/dist/antd.css';\r\n\r\n    class App extends React.Component{\r\n        constructor(props){\r\n          super(props)\r\n      \r\n          this.state = {\r\n            loadingResults: true,\r\n            results: [],\r\n            recipe: {'title': '',\r\n                      'img': '',\r\n                    'summary': ''},\r\n            selectedRecipe: -1,\r\n            metric: false\r\n          }\r\n        }\r\n      \r\n        render(){\r\n          return (\r\n            <div className=\"app\">\r\n              <AppHeader unitFunc={(bool) => this.toggleUnits(bool)}/>\r\n              <Layout className='layout-body'>\r\n                <AppSider \r\n                  results={this.state.results}\r\n                  totalResults={this.state.totalResults}\r\n                  onSelectChange={(id) => this.handleChangeSelected(id)} \r\n                  onSearch={(query) => this.searchRecipies(query)}\r\n                  loading={this.state.loadingResults}/>\r\n                <AppContent \r\n                  ID={this.state.selectedRecipe} \r\n                  recipe={this.state.recipe} \r\n                  instructions={this.state.instructions} \r\n                  ingred={this.state.ingred}\r\n                  useMetric={this.state.metric}/>\r\n              </Layout>\r\n            </div>\r\n          );\r\n        }\r\n      \r\n        //Switch between US measurement system and Metric measurement system\r\n        toggleUnits(bool){\r\n          this.setState({metric: bool})\r\n        }\r\n      \r\n        //Search for recipies using a query\r\n        searchRecipies(input){\r\n          this.setState({loadingResults: false})\r\n          this.setState ({results : []})\r\n          this.setState({totalResults: 0})\r\n      \r\n          fetch(this.encodeSearch(input))\r\n          .then(res => res.json())\r\n          .then((data) => {\r\n              this.setState({loadingResults: true})\r\n              this.setState ({results : data.results})\r\n              this.setState({totalResults: data.totalResults})\r\n          })\r\n          .catch(console.log)\r\n        }\r\n      \r\n        encodeSearch = (query) =>{\r\n          let request = 'https://api.spoonacular.com/recipes/complexSearch?apiKey=93b09acd5a44410d87094660a3bfb7ff&sort=popularity&number=25&instructionsRequired=true&query=' + query\r\n          console.log(request)\r\n          return request\r\n        }\r\n      \r\n      //Get recipie information and display in app content\r\n        handleChangeSelected(id) {\r\n          console.log('Menu Log: Recipie selected, id' + {id})\r\n          this.setState({selectedRecipe: id})\r\n          this.getRecipe(id)\r\n        }\r\n      \r\n        getRecipe(id){\r\n          console.log('API Log: fetching recipie')\r\n          fetch(this.encodeID(id))\r\n          .then(res => res.json())\r\n          .then((data) => {\r\n            //TODO: rather confusing without context, looking for a better way while also avoiding a another api call\r\n              var instructions = data['analyzedInstructions']\r\n              instructions = instructions[0]\r\n              instructions = instructions['steps']\r\n      \r\n              var ingred = data['extendedIngredients']\r\n      \r\n              this.setState ({recipe : data,\r\n              instructions: instructions,\r\n              ingred: ingred})\r\n              console.log('API Log: Successful GET')\r\n          })\r\n          .catch(console.log('API Log: error')\r\n          )\r\n      }\r\n      \r\n        encodeID = (id) =>{\r\n            let request = 'https://api.spoonacular.com/recipes/' + id + '/information?apiKey=93b09acd5a44410d87094660a3bfb7ff'\r\n            console.log(request)\r\n            return request\r\n        }\r\n      }\r\n      \r\n      export default App;\r\n"]},"metadata":{},"sourceType":"module"}