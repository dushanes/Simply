{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\knightnight101\\\\Desktop\\\\Personal_Projects\\\\Simply\\\\src\\\\SimplyApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './components/css/SimplyApp.less';\nimport { AppHeader } from './components/AppHeader';\nimport { AppContent } from './components/AppContent';\nimport { BarList } from './components/BarList';\nimport 'antd/dist/antd.less';\nimport { Results } from './components/Results';\nconst {\n  Content,\n  Footer\n} = _Layout;\n\nfunction SimplyApp() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [resultsState, setResultsState] = useState([]);\n  const [metricState, setMetricState] = useState(false);\n  const [isSearching, setSearching] = useState(false);\n  const [recipe, setRecipe] = useState({\n    title: '',\n    img: '',\n    summary: ''\n  });\n  const [recipeID, setRecipeID] = useState(-1);\n  const [totalResults, setTotalState] = useState(0);\n  const [instructions, setInstructions] = useState([]);\n  const [ingredients, setIngred] = useState([]);\n\n  function onPageChange(page, pageSize) {\n    let offset = page * pageSize;\n\n    switch (pageSize) {\n      case 10:\n        if (offset % 100 === 0) searchRecipies(searchTerm, offset);\n        break;\n\n      case 20:\n        if (offset % 100 === 0) searchRecipies(searchTerm, offset);\n        break;\n\n      case 50:\n        if (offset % 100 === 0) searchRecipies(searchTerm, offset);\n        break;\n\n      case 100:\n        if (offset % 100 === 0) searchRecipies(searchTerm, offset);\n        break;\n\n      default:\n    }\n  } //Switch between US measurement system and Metric measurement system\n\n\n  const toggleUnits = bool => {\n    setMetricState(bool);\n  }; //Get recipie information and display in app content\n\n\n  const handleChangeSelected = id => {\n    console.log('Menu Log: Recipie selected, id' + {\n      id\n    });\n    setRecipeID(id);\n    getRecipe(id);\n  }; //Search for recipies using a query\n\n\n  const searchRecipies = (input, offset) => {\n    setSearching(true);\n    setSearchTerm(input);\n    fetch(encodeSearch(input, offset)).then(res => {\n      if (!res.ok) {\n        throw new Error('Network response was not ok');\n      } else return res.json();\n    }).then(data => {\n      offset ? setResultsState(prev => [...prev, ...data.results]) : setResultsState(data.results);\n      setTotalState(data.totalResults);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const encodeSearch = (query, offset) => {\n    let _offset = offset || \"\";\n\n    let request = \"https://api.spoonacular.com/recipes/complexSearch?apiKey=93b09acd5a44410d87094660a3bfb7ff&sort=popularity&number=100&instructionsRequired=true&query=\" + query + \"&offset=\" + _offset;\n    console.log(request);\n    return request;\n  };\n\n  const encodeID = id => {\n    let request = 'https://api.spoonacular.com/recipes/' + id + '/information?apiKey=93b09acd5a44410d87094660a3bfb7ff';\n    console.log(request);\n    return request;\n  };\n\n  const getRecipe = id => {\n    console.log('API Log: fetching recipie');\n    fetch(encodeID(id)).then(res => {\n      if (!res.ok) {\n        throw new Error('Network response was not ok');\n      } else return res.json();\n    }).then(data => {\n      var instructions = data.analyzedInstructions;\n      var ingred = data.extendedIngredients;\n      instructions = instructions[0];\n      instructions = instructions.steps;\n      setRecipe(data);\n      setInstructions(instructions);\n      setIngred(ingred);\n      console.log('API Log: Successful GET');\n    }).catch(error => {\n      console.log(error);\n    });\n    setSearching(false);\n  };\n\n  function returnHome() {\n    setRecipeID(-1);\n    setSearching(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n      toggleUnits: toggleUnits,\n      onSearch: searchRecipies,\n      returnHome: returnHome\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Layout, {\n      className: \"layout-body\",\n      children: [/*#__PURE__*/_jsxDEV(BarList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        className: \"content\",\n        children: isSearching ? /*#__PURE__*/_jsxDEV(Results, {\n          results: resultsState,\n          totalResults: totalResults,\n          onSelectChange: handleChangeSelected,\n          onPageChange: onPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(AppContent, {\n          ID: recipeID,\n          recipe: recipe,\n          instructions: instructions,\n          ingred: ingredients,\n          useMetric: metricState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        style: {\n          textAlign: 'center',\n          color: 'white',\n          zIndex: 1\n        },\n        children: \"Using Ant Design 2020 Created by Dushane Smith\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SimplyApp, \"L5NIW+U+gvphcXlMeFz3eEifRZU=\");\n\n_c = SimplyApp;\nexport default SimplyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimplyApp\");","map":{"version":3,"sources":["C:/Users/knightnight101/Desktop/Personal_Projects/Simply/src/SimplyApp.js"],"names":["React","useState","AppHeader","AppContent","BarList","Results","Content","Footer","SimplyApp","searchTerm","setSearchTerm","resultsState","setResultsState","metricState","setMetricState","isSearching","setSearching","recipe","setRecipe","title","img","summary","recipeID","setRecipeID","totalResults","setTotalState","instructions","setInstructions","ingredients","setIngred","onPageChange","page","pageSize","offset","searchRecipies","toggleUnits","bool","handleChangeSelected","id","console","log","getRecipe","input","fetch","encodeSearch","then","res","ok","Error","json","data","prev","results","catch","error","query","_offset","request","encodeID","analyzedInstructions","ingred","extendedIngredients","steps","returnHome","textAlign","color","zIndex"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './components/css/SimplyApp.less';\r\nimport { Layout, Switch } from 'antd'\r\nimport { AppHeader } from './components/AppHeader'\r\nimport { AppContent } from './components/AppContent'\r\nimport { BarList } from './components/BarList'\r\nimport 'antd/dist/antd.less'\r\nimport { Results } from './components/Results';\r\nconst {Content, Footer} = Layout\r\n\r\nfunction SimplyApp(){\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n    const [resultsState, setResultsState] = useState([])\r\n    const [metricState, setMetricState] = useState(false)\r\n    const [isSearching, setSearching] = useState(false)\r\n    const [recipe, setRecipe] = useState ({title: '' , img: '', summary: ''})\r\n    const [recipeID, setRecipeID] = useState(-1)\r\n    const [totalResults, setTotalState] = useState(0)\r\n    const [instructions, setInstructions] = useState([])\r\n    const [ingredients, setIngred] = useState([]) \r\n\r\n    function onPageChange(page, pageSize){\r\n        let offset = page * pageSize\r\n        switch(pageSize){\r\n            case 10:\r\n                if (offset % 100 === 0)  searchRecipies(searchTerm, offset)\r\n                break;\r\n            case 20:\r\n                if (offset % 100 === 0)  searchRecipies(searchTerm, offset)\r\n                break;\r\n            case 50:\r\n                if (offset % 100 === 0)  searchRecipies(searchTerm, offset)\r\n                break;\r\n            case 100: \r\n                if (offset % 100 === 0)  searchRecipies(searchTerm, offset)\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    //Switch between US measurement system and Metric measurement system\r\n    const toggleUnits = (bool) => {\r\n        setMetricState(bool)\r\n    }\r\n\r\n    //Get recipie information and display in app content\r\n    const handleChangeSelected =(id) => {\r\n        console.log('Menu Log: Recipie selected, id' + {id})\r\n        setRecipeID(id)\r\n        getRecipe(id)\r\n    }\r\n\r\n    //Search for recipies using a query\r\n    const searchRecipies = (input, offset) => {\r\n        setSearching(true)\r\n        setSearchTerm(input)\r\n        fetch(encodeSearch(input, offset))\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }else\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                offset ? setResultsState(prev => [...prev , ...data.results]) : setResultsState(data.results)\r\n                setTotalState(data.totalResults)\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const encodeSearch = (query, offset) =>{\r\n        let _offset = offset || \"\"\r\n        let request = \"https://api.spoonacular.com/recipes/complexSearch?apiKey=93b09acd5a44410d87094660a3bfb7ff&sort=popularity&number=100&instructionsRequired=true&query=\" + query +\"&offset=\" + _offset\r\n        console.log(request)\r\n        return request\r\n    }\r\n\r\n    const encodeID = (id) =>{\r\n        let request = 'https://api.spoonacular.com/recipes/' + id + '/information?apiKey=93b09acd5a44410d87094660a3bfb7ff'\r\n        console.log(request)\r\n        return request\r\n    }\r\n\r\n    const getRecipe = (id) => {\r\n        console.log('API Log: fetching recipie')\r\n        fetch(encodeID(id))\r\n        .then(res => {\r\n            if (!res.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }else\r\n            return res.json()\r\n        }).then((data) => {\r\n            var instructions = data.analyzedInstructions \r\n            var ingred = data.extendedIngredients\r\n            instructions = instructions[0]\r\n            instructions = instructions.steps\r\n\r\n            setRecipe(data)\r\n            setInstructions(instructions)\r\n            setIngred(ingred)\r\n            console.log('API Log: Successful GET')\r\n        })\r\n        .catch((error) => {console.log(error)})\r\n        setSearching(false)\r\n    }\r\n\r\n    function returnHome(){\r\n        setRecipeID(-1)\r\n        setSearching(false)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"app\">\r\n        <AppHeader \r\n            toggleUnits={toggleUnits}\r\n            onSearch={searchRecipies} \r\n            returnHome={returnHome}/>\r\n        <Layout className='layout-body'>\r\n                <BarList/>\r\n\r\n                <Content className='content'>\r\n                    {\r\n                        isSearching ? \r\n                            <Results \r\n                                results={resultsState}\r\n                                totalResults={totalResults} \r\n                                onSelectChange={handleChangeSelected} \r\n                                onPageChange={onPageChange}/> \r\n                            : \r\n                            <AppContent\r\n                                ID={recipeID}\r\n                                recipe={recipe}\r\n                                instructions={instructions}\r\n                                ingred={ingredients}\r\n                                useMetric={metricState}/>\r\n                    }\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center', color: 'white', zIndex: 1}}>\r\n                    Using Ant Design 2020 Created by Dushane Smith\r\n                </Footer>\r\n        </Layout>\r\n        </div>\r\n    );\r\n}\r\nexport default SimplyApp\r\n"]},"metadata":{},"sourceType":"module"}